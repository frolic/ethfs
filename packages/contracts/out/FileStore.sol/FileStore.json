{"abi":[{"type":"constructor","inputs":[{"name":"_deployer","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"createFile","inputs":[{"name":"filename","type":"string","internalType":"string"},{"name":"contents","type":"string","internalType":"string"}],"outputs":[{"name":"pointer","type":"address","internalType":"address"},{"name":"file","type":"tuple","internalType":"struct File","components":[{"name":"size","type":"uint256","internalType":"uint256"},{"name":"slices","type":"tuple[]","internalType":"struct BytecodeSlice[]","components":[{"name":"pointer","type":"address","internalType":"address"},{"name":"start","type":"uint32","internalType":"uint32"},{"name":"end","type":"uint32","internalType":"uint32"}]}]}],"stateMutability":"nonpayable"},{"type":"function","name":"createFile","inputs":[{"name":"filename","type":"string","internalType":"string"},{"name":"contents","type":"string","internalType":"string"},{"name":"metadata","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"pointer","type":"address","internalType":"address"},{"name":"file","type":"tuple","internalType":"struct File","components":[{"name":"size","type":"uint256","internalType":"uint256"},{"name":"slices","type":"tuple[]","internalType":"struct BytecodeSlice[]","components":[{"name":"pointer","type":"address","internalType":"address"},{"name":"start","type":"uint32","internalType":"uint32"},{"name":"end","type":"uint32","internalType":"uint32"}]}]}],"stateMutability":"nonpayable"},{"type":"function","name":"createFileFromChunks","inputs":[{"name":"filename","type":"string","internalType":"string"},{"name":"chunks","type":"string[]","internalType":"string[]"},{"name":"metadata","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"pointer","type":"address","internalType":"address"},{"name":"file","type":"tuple","internalType":"struct File","components":[{"name":"size","type":"uint256","internalType":"uint256"},{"name":"slices","type":"tuple[]","internalType":"struct BytecodeSlice[]","components":[{"name":"pointer","type":"address","internalType":"address"},{"name":"start","type":"uint32","internalType":"uint32"},{"name":"end","type":"uint32","internalType":"uint32"}]}]}],"stateMutability":"nonpayable"},{"type":"function","name":"createFileFromChunks","inputs":[{"name":"filename","type":"string","internalType":"string"},{"name":"chunks","type":"string[]","internalType":"string[]"}],"outputs":[{"name":"pointer","type":"address","internalType":"address"},{"name":"file","type":"tuple","internalType":"struct File","components":[{"name":"size","type":"uint256","internalType":"uint256"},{"name":"slices","type":"tuple[]","internalType":"struct BytecodeSlice[]","components":[{"name":"pointer","type":"address","internalType":"address"},{"name":"start","type":"uint32","internalType":"uint32"},{"name":"end","type":"uint32","internalType":"uint32"}]}]}],"stateMutability":"nonpayable"},{"type":"function","name":"createFileFromPointers","inputs":[{"name":"filename","type":"string","internalType":"string"},{"name":"pointers","type":"address[]","internalType":"address[]"},{"name":"metadata","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"pointer","type":"address","internalType":"address"},{"name":"file","type":"tuple","internalType":"struct File","components":[{"name":"size","type":"uint256","internalType":"uint256"},{"name":"slices","type":"tuple[]","internalType":"struct BytecodeSlice[]","components":[{"name":"pointer","type":"address","internalType":"address"},{"name":"start","type":"uint32","internalType":"uint32"},{"name":"end","type":"uint32","internalType":"uint32"}]}]}],"stateMutability":"nonpayable"},{"type":"function","name":"createFileFromPointers","inputs":[{"name":"filename","type":"string","internalType":"string"},{"name":"pointers","type":"address[]","internalType":"address[]"}],"outputs":[{"name":"pointer","type":"address","internalType":"address"},{"name":"file","type":"tuple","internalType":"struct File","components":[{"name":"size","type":"uint256","internalType":"uint256"},{"name":"slices","type":"tuple[]","internalType":"struct BytecodeSlice[]","components":[{"name":"pointer","type":"address","internalType":"address"},{"name":"start","type":"uint32","internalType":"uint32"},{"name":"end","type":"uint32","internalType":"uint32"}]}]}],"stateMutability":"nonpayable"},{"type":"function","name":"createFileFromSlices","inputs":[{"name":"filename","type":"string","internalType":"string"},{"name":"slices","type":"tuple[]","internalType":"struct BytecodeSlice[]","components":[{"name":"pointer","type":"address","internalType":"address"},{"name":"start","type":"uint32","internalType":"uint32"},{"name":"end","type":"uint32","internalType":"uint32"}]},{"name":"metadata","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"pointer","type":"address","internalType":"address"},{"name":"file","type":"tuple","internalType":"struct File","components":[{"name":"size","type":"uint256","internalType":"uint256"},{"name":"slices","type":"tuple[]","internalType":"struct BytecodeSlice[]","components":[{"name":"pointer","type":"address","internalType":"address"},{"name":"start","type":"uint32","internalType":"uint32"},{"name":"end","type":"uint32","internalType":"uint32"}]}]}],"stateMutability":"nonpayable"},{"type":"function","name":"createFileFromSlices","inputs":[{"name":"filename","type":"string","internalType":"string"},{"name":"slices","type":"tuple[]","internalType":"struct BytecodeSlice[]","components":[{"name":"pointer","type":"address","internalType":"address"},{"name":"start","type":"uint32","internalType":"uint32"},{"name":"end","type":"uint32","internalType":"uint32"}]}],"outputs":[{"name":"pointer","type":"address","internalType":"address"},{"name":"file","type":"tuple","internalType":"struct File","components":[{"name":"size","type":"uint256","internalType":"uint256"},{"name":"slices","type":"tuple[]","internalType":"struct BytecodeSlice[]","components":[{"name":"pointer","type":"address","internalType":"address"},{"name":"start","type":"uint32","internalType":"uint32"},{"name":"end","type":"uint32","internalType":"uint32"}]}]}],"stateMutability":"nonpayable"},{"type":"function","name":"deployer","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"fileExists","inputs":[{"name":"filename","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"files","inputs":[{"name":"filename","type":"string","internalType":"string"}],"outputs":[{"name":"pointer","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"getFile","inputs":[{"name":"filename","type":"string","internalType":"string"}],"outputs":[{"name":"file","type":"tuple","internalType":"struct File","components":[{"name":"size","type":"uint256","internalType":"uint256"},{"name":"slices","type":"tuple[]","internalType":"struct BytecodeSlice[]","components":[{"name":"pointer","type":"address","internalType":"address"},{"name":"start","type":"uint32","internalType":"uint32"},{"name":"end","type":"uint32","internalType":"uint32"}]}]}],"stateMutability":"view"},{"type":"function","name":"getPointer","inputs":[{"name":"filename","type":"string","internalType":"string"}],"outputs":[{"name":"pointer","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"readFile","inputs":[{"name":"filename","type":"string","internalType":"string"}],"outputs":[{"name":"contents","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"event","name":"Deployed","inputs":[],"anonymous":false},{"type":"event","name":"FileCreated","inputs":[{"name":"indexedFilename","type":"string","indexed":true,"internalType":"string"},{"name":"pointer","type":"address","indexed":true,"internalType":"address"},{"name":"filename","type":"string","indexed":false,"internalType":"string"},{"name":"size","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"metadata","type":"bytes","indexed":false,"internalType":"bytes"}],"anonymous":false},{"type":"error","name":"FileEmpty","inputs":[]},{"type":"error","name":"FileNotFound","inputs":[{"name":"filename","type":"string","internalType":"string"}]},{"type":"error","name":"FilenameExists","inputs":[{"name":"filename","type":"string","internalType":"string"}]},{"type":"error","name":"InvalidPointer","inputs":[{"name":"pointer","type":"address","internalType":"address"}]},{"type":"error","name":"SliceEmpty","inputs":[{"name":"pointer","type":"address","internalType":"address"},{"name":"start","type":"uint32","internalType":"uint32"},{"name":"end","type":"uint32","internalType":"uint32"}]},{"type":"error","name":"SliceOutOfBounds","inputs":[{"name":"pointer","type":"address","internalType":"address"},{"name":"codeSize","type":"uint32","internalType":"uint32"},{"name":"sliceStart","type":"uint32","internalType":"uint32"},{"name":"sliceEnd","type":"uint32","internalType":"uint32"}]},{"type":"error","name":"UnexpectedPointer","inputs":[{"name":"expectedPointer","type":"address","internalType":"address"},{"name":"actualPointer","type":"address","internalType":"address"}]}],"bytecode":{"object":"0x60a060405234801561001057600080fd5b50604051611cb5380380611cb583398101604081905261002f9161006b565b6001600160a01b0381166080526040517f3fad920548ed9f22deb8333b4cc1e4f9bc36666a1c2aa30ad59a0a3bb9dcbb9290600090a15061009b565b60006020828403121561007d57600080fd5b81516001600160a01b038116811461009457600080fd5b9392505050565b608051611bf16100c4600039600081816101c00152818161086a0152610dd50152611bf16000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063d0e11f721161008c578063e24eaca411610066578063e24eaca41461021a578063e77557611461022d578063e9c7b51c14610261578063fae172e61461027457600080fd5b8063d0e11f72146101a8578063d5f39488146101bb578063e0876aa8146101fa57600080fd5b806381ad193a116100c857806381ad193a1461014c57806383e870d31461015f5780639bccd6ad146101725780639d3127df1461019557600080fd5b806355bb7d2c146100ef57806360f9bb11146101195780637611cb0214610139575b600080fd5b6101026100fd3660046113fc565b610287565b604051610110929190611500565b60405180910390f35b61012c61012736600461152c565b6102c5565b60405161011091906115b0565b610102610147366004611636565b6102de565b61010261015a366004611690565b61030a565b61010261016d366004611772565b610355565b61018561018036600461152c565b610381565b6040519015158152602001610110565b6101026101a33660046117cc565b6103be565b6101026101b6366004611825565b6103ea565b6101e27f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610110565b61020d61020836600461152c565b610416565b604051610110919061187e565b610102610228366004611891565b6104a3565b6101e261023b36600461152c565b80516020818301810180516000825292820191909301209152546001600160a01b031681565b61010261026f3660046118ea565b6104cf565b6101e261028236600461152c565b6104fb565b60006102a6604051806040016040528060008152602001606081525090565b6102b9856102b38661054c565b856107d0565b91509150935093915050565b60606102d86102d383610416565b61094a565b92915050565b60006102fd604051806040016040528060008152602001606081525090565b6102b9856102b3866109ef565b6000610329604051806040016040528060008152602001606081525090565b61034a8461033685610c32565b6040805160008152602081019091526107d0565b915091509250929050565b6000610374604051806040016040528060008152602001606081525090565b6102b9856102b386610d45565b6000806001600160a01b031660008360405161039d9190611944565b908152604051908190036020019020546001600160a01b0316141592915050565b60006103dd604051806040016040528060008152602001606081525090565b61034a846103368561054c565b6000610409604051806040016040528060008152602001606081525090565b61034a8461033685610d45565b6040805180820190915260008152606060208201526000808360405161043c9190611944565b908152604051908190036020019020546001600160a01b03169050806104805782604051630b5d665f60e31b815260040161047791906115b0565b60405180910390fd5b61048981610f32565b80602001905181019061049c9190611960565b9392505050565b60006104c2604051806040016040528060008152602001606081525090565b61034a84610336856109ef565b60006104ee604051806040016040528060008152602001606081525090565b6102b9856102b386610c32565b6000808260405161050c9190611944565b908152604051908190036020019020546001600160a01b03169050806105475781604051630b5d665f60e31b815260040161047791906115b0565b919050565b6040805180820190915260008152606060208201526000805b83518110156107b657600084828151811061058257610582611a77565b6020026020010151602001518583815181106105a0576105a0611a77565b6020026020010151604001516105b69190611aa3565b63ffffffff1611610659578381815181106105d3576105d3611a77565b6020026020010151600001518482815181106105f1576105f1611a77565b60200260200101516020015185838151811061060f5761060f611a77565b602002602001015160400151604051630fb55db160e41b8152600401610477939291906001600160a01b0393909316835263ffffffff918216602084015216604082015260600190565b600084828151811061066d5761066d611a77565b6020026020010151600001516001600160a01b03163b90508063ffffffff1685838151811061069e5761069e611a77565b60200260200101516040015163ffffffff161115610755578482815181106106c8576106c8611a77565b602002602001015160000151818684815181106106e7576106e7611a77565b60200260200101516020015187858151811061070557610705611a77565b602090810291909101015160409081015190516386d14d8960e01b81526001600160a01b03909416600485015263ffffffff92831660248501529082166044840152166064820152608401610477565b84828151811061076757610767611a77565b60200260200101516020015185838151811061078557610785611a77565b60200260200101516040015161079b9190611aa3565b6107ab9063ffffffff1684611ac7565b925050600101610565565b506040805180820190915290815260208101929092525090565b60006107ef604051806040016040528060008152602001606081525090565b83516000036108115760405163d74d341f60e01b815260040160405180910390fd5b60006001600160a01b031660008660405161082c9190611944565b908152604051908190036020019020546001600160a01b03161461086557846040516301856ec560e51b815260040161047791906115b0565b6108ae7f00000000000000000000000000000000000000000000000000000000000000008560405160200161089a919061187e565b604051602081830303815290604052610f7c565b9150816000866040516108c19190611944565b90815260405190819003602001812080546001600160a01b039384166001600160a01b0319909116179055908316906108fb908790611944565b60405180910390207f656833a15067acdf08730a6a38b6ab9ed5e3265936848d56eac08e7b3b7239648787600001518760405161093a93929190611ada565b60405180910390a3509391925050565b6020808201518051604051926386d14d8960e01b9190600080808080805b878110156109cd57602081026020018a01519550855194506020860151935060408601519250843b9150818311156109b457886000528460045281602452836044528260645260846000fd5b83830384888d01873c8383039690960195600101610968565b505050505050602081038552601f19601f820116850160405250505050919050565b60408051808201909152600081526060602082015260008083516001600160401b03811115610a2057610a206111fc565b604051908082528060200260200182016040528015610a6b57816020015b6040805160608101825260008082526020808301829052928201528252600019909201910181610a3e5790505b50905060005b8451811015610c1957610a9c858281518110610a8f57610a8f611a77565b6020026020010151611094565b610ae357848181518110610ab257610ab2611a77565b60200260200101516040516326cd283760e01b815260040161047791906001600160a01b0391909116815260200190565b848181518110610af557610af5611a77565b6020026020010151828281518110610b0f57610b0f611a77565b6020026020010151600001906001600160a01b031690816001600160a01b0316815250506001828281518110610b4757610b47611a77565b60200260200101516020019063ffffffff16908163ffffffff1681525050848181518110610b7757610b77611a77565b60200260200101516001600160a01b03163b828281518110610b9b57610b9b611a77565b60200260200101516040019063ffffffff16908163ffffffff1681525050818181518110610bcb57610bcb611a77565b602002602001015160200151828281518110610be957610be9611a77565b602002602001015160400151610bff9190611aa3565b610c0f9063ffffffff1684611ac7565b9250600101610a71565b5060408051808201909152918252602082015292915050565b6040805180820190915260008152606060208201528151615fff6000816001610c5b8286611ac7565b610c659190611b05565b610c6f9190611b18565b90506000816001600160401b03811115610c8b57610c8b6111fc565b604051908082528060200260200182016040528015610cbe57816020015b6060815260200190600190039081610ca95790505b50905060005b82811015610d31576000610cd88583611b3a565b9050600086610ce78784611ac7565b11610cfb57610cf68683611ac7565b610cfd565b865b9050610d0a8983836110bd565b848481518110610d1c57610d1c611a77565b60209081029190910101525050600101610cc4565b50610d3b81610d45565b9695505050505050565b60408051808201909152600081526060602082015260008083516001600160401b03811115610d7657610d766111fc565b604051908082528060200260200182016040528015610dc157816020015b6040805160608101825260008082526020808301829052928201528252600019909201910181610d945790505b50905060005b8451811015610c1957610e137f0000000000000000000000000000000000000000000000000000000000000000868381518110610e0657610e06611a77565b6020026020010151610f7c565b828281518110610e2557610e25611a77565b6020026020010151600001906001600160a01b031690816001600160a01b0316815250506001828281518110610e5d57610e5d611a77565b60200260200101516020019063ffffffff16908163ffffffff1681525050848181518110610e8d57610e8d611a77565b6020026020010151516001610ea29190611ac7565b828281518110610eb457610eb4611a77565b60200260200101516040019063ffffffff16908163ffffffff1681525050818181518110610ee457610ee4611a77565b602002602001015160200151828281518110610f0257610f02611a77565b602002602001015160400151610f189190611aa3565b610f289063ffffffff1684611ac7565b9250600101610dc7565b6060813b80610f49576311052bb46000526004601cfd5b600181039050604051915061ffe0603f820116820160405280825260008160208401015280600160208401853c50919050565b600080610f898484611123565b90506001600160a01b0381163b15610fa25790506102d8565b600080856001600160a01b031664457468465360d81b610fc187611138565b604051602001610fd2929190611b51565b60408051601f1981840301815290829052610fec91611944565b6000604051808303816000865af19150503d8060008114611029576040519150601f19603f3d011682016040523d82523d6000602084013e61102e565b606091505b509150915081611041576110418161118d565b61104a81611b77565b60601c93506001600160a01b038316841461108b57604051636509115d60e01b81526001600160a01b03808516600483015285166024820152604401610477565b50505092915050565b6000813b60fe81156110b5576040516001600082873c601e19015160ff1690505b159392505050565b606083518281116110cc578092505b8381116110d7578093505b508183101561049c575060405182820380825293830193601f19601f820181165b86810151848201528101806110f85750600083830160200152603f9091011681016040529392505050565b600061049c8264457468465360d81b85611195565b6060815160016111489190611ac7565b60e81b6001600160e81b0319166a61000080600a3d393df30060a81b1782604051602001611177929190611bb3565b6040516020818303038152906040529050919050565b805160208201fd5b6000806111a1856111cb565b905060ff600053806035528260601b60015283601552605560002091506000603552509392505050565b60008151600181018060101c3d3d3e6a61000080600a3d393df300604082901b178452600a01601584012092525090565b634e487b7160e01b600052604160045260246000fd5b604051606081016001600160401b0381118282101715611234576112346111fc565b60405290565b604080519081016001600160401b0381118282101715611234576112346111fc565b604051601f8201601f191681016001600160401b0381118282101715611284576112846111fc565b604052919050565b600082601f83011261129d57600080fd5b81356001600160401b038111156112b6576112b66111fc565b6112c9601f8201601f191660200161125c565b8181528460208386010111156112de57600080fd5b816020850160208301376000918101602001919091529392505050565b60006001600160401b03821115611314576113146111fc565b5060051b60200190565b6001600160a01b038116811461133357600080fd5b50565b63ffffffff8116811461133357600080fd5b600082601f83011261135957600080fd5b8135602061136e611369836112fb565b61125c565b8281526060928302850182019282820191908785111561138d57600080fd5b8387015b858110156113ef5781818a0312156113a95760008081fd5b6113b1611212565b81356113bc8161131e565b8152818601356113cb81611336565b818701526040828101356113de81611336565b908201528452928401928101611391565b5090979650505050505050565b60008060006060848603121561141157600080fd5b83356001600160401b038082111561142857600080fd5b6114348783880161128c565b9450602086013591508082111561144a57600080fd5b61145687838801611348565b9350604086013591508082111561146c57600080fd5b506114798682870161128c565b9150509250925092565b600060408084018351855260208085015160408288015282815180855260609450606089019150838301925060005b818110156114f257835180516001600160a01b031684528581015163ffffffff9081168786015290880151168784015292840192918501916001016114b2565b509098975050505050505050565b6001600160a01b038316815260406020820181905260009061152490830184611483565b949350505050565b60006020828403121561153e57600080fd5b81356001600160401b0381111561155457600080fd5b6115248482850161128c565b60005b8381101561157b578181015183820152602001611563565b50506000910152565b6000815180845261159c816020860160208601611560565b601f01601f19169290920160200192915050565b60208152600061049c6020830184611584565b600082601f8301126115d457600080fd5b813560206115e4611369836112fb565b8083825260208201915060208460051b87010193508684111561160657600080fd5b602086015b8481101561162b57803561161e8161131e565b835291830191830161160b565b509695505050505050565b60008060006060848603121561164b57600080fd5b83356001600160401b038082111561166257600080fd5b61166e8783880161128c565b9450602086013591508082111561168457600080fd5b611456878388016115c3565b600080604083850312156116a357600080fd5b82356001600160401b03808211156116ba57600080fd5b6116c68683870161128c565b935060208501359150808211156116dc57600080fd5b506116e98582860161128c565b9150509250929050565b600082601f83011261170457600080fd5b81356020611714611369836112fb565b82815260059290921b8401810191818101908684111561173357600080fd5b8286015b8481101561162b5780356001600160401b038111156117565760008081fd5b6117648986838b010161128c565b845250918301918301611737565b60008060006060848603121561178757600080fd5b83356001600160401b038082111561179e57600080fd5b6117aa8783880161128c565b945060208601359150808211156117c057600080fd5b611456878388016116f3565b600080604083850312156117df57600080fd5b82356001600160401b03808211156117f657600080fd5b6118028683870161128c565b9350602085013591508082111561181857600080fd5b506116e985828601611348565b6000806040838503121561183857600080fd5b82356001600160401b038082111561184f57600080fd5b61185b8683870161128c565b9350602085013591508082111561187157600080fd5b506116e9858286016116f3565b60208152600061049c6020830184611483565b600080604083850312156118a457600080fd5b82356001600160401b03808211156118bb57600080fd5b6118c78683870161128c565b935060208501359150808211156118dd57600080fd5b506116e9858286016115c3565b6000806000606084860312156118ff57600080fd5b83356001600160401b038082111561191657600080fd5b6119228783880161128c565b9450602086013591508082111561193857600080fd5b6114568783880161128c565b60008251611956818460208701611560565b9190910192915050565b6000602080838503121561197357600080fd5b82516001600160401b038082111561198a57600080fd5b818501915060408083880312156119a057600080fd5b6119a861123a565b8351815284840151838111156119bd57600080fd5b80850194505087601f8501126119d257600080fd5b835192506119e2611369846112fb565b8381526060938402850186019386820191908a861115611a0157600080fd5b958701955b85871015611a645780878c031215611a1e5760008081fd5b611a26611212565b8751611a318161131e565b815287890151611a4081611336565b818a015287860151611a5181611336565b8187015283529586019591870191611a06565b5095820195909552979650505050505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b63ffffffff828116828216039080821115611ac057611ac0611a8d565b5092915050565b808201808211156102d8576102d8611a8d565b606081526000611aed6060830186611584565b8460208401528281036040840152610d3b8185611584565b818103818111156102d8576102d8611a8d565b600082611b3557634e487b7160e01b600052601260045260246000fd5b500490565b80820281158282048414176102d8576102d8611a8d565b82815260008251611b69816020850160208701611560565b919091016020019392505050565b805160208201516bffffffffffffffffffffffff198082169291906014831015611bab5780818460140360031b1b83161693505b505050919050565b6001600160a81b0319831681528151600090611bd681600b850160208701611560565b91909101600b01939250505056fea164736f6c6343000818000a","sourceMap":"533:12304:39:-:0;;;968:93;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1009:20:39;;;;1044:10;;;;;;;968:93;533:12304;;14:290:47;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:47;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:47:o;:::-;533:12304:39;;;;;;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063d0e11f721161008c578063e24eaca411610066578063e24eaca41461021a578063e77557611461022d578063e9c7b51c14610261578063fae172e61461027457600080fd5b8063d0e11f72146101a8578063d5f39488146101bb578063e0876aa8146101fa57600080fd5b806381ad193a116100c857806381ad193a1461014c57806383e870d31461015f5780639bccd6ad146101725780639d3127df1461019557600080fd5b806355bb7d2c146100ef57806360f9bb11146101195780637611cb0214610139575b600080fd5b6101026100fd3660046113fc565b610287565b604051610110929190611500565b60405180910390f35b61012c61012736600461152c565b6102c5565b60405161011091906115b0565b610102610147366004611636565b6102de565b61010261015a366004611690565b61030a565b61010261016d366004611772565b610355565b61018561018036600461152c565b610381565b6040519015158152602001610110565b6101026101a33660046117cc565b6103be565b6101026101b6366004611825565b6103ea565b6101e27f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610110565b61020d61020836600461152c565b610416565b604051610110919061187e565b610102610228366004611891565b6104a3565b6101e261023b36600461152c565b80516020818301810180516000825292820191909301209152546001600160a01b031681565b61010261026f3660046118ea565b6104cf565b6101e261028236600461152c565b6104fb565b60006102a6604051806040016040528060008152602001606081525090565b6102b9856102b38661054c565b856107d0565b91509150935093915050565b60606102d86102d383610416565b61094a565b92915050565b60006102fd604051806040016040528060008152602001606081525090565b6102b9856102b3866109ef565b6000610329604051806040016040528060008152602001606081525090565b61034a8461033685610c32565b6040805160008152602081019091526107d0565b915091509250929050565b6000610374604051806040016040528060008152602001606081525090565b6102b9856102b386610d45565b6000806001600160a01b031660008360405161039d9190611944565b908152604051908190036020019020546001600160a01b0316141592915050565b60006103dd604051806040016040528060008152602001606081525090565b61034a846103368561054c565b6000610409604051806040016040528060008152602001606081525090565b61034a8461033685610d45565b6040805180820190915260008152606060208201526000808360405161043c9190611944565b908152604051908190036020019020546001600160a01b03169050806104805782604051630b5d665f60e31b815260040161047791906115b0565b60405180910390fd5b61048981610f32565b80602001905181019061049c9190611960565b9392505050565b60006104c2604051806040016040528060008152602001606081525090565b61034a84610336856109ef565b60006104ee604051806040016040528060008152602001606081525090565b6102b9856102b386610c32565b6000808260405161050c9190611944565b908152604051908190036020019020546001600160a01b03169050806105475781604051630b5d665f60e31b815260040161047791906115b0565b919050565b6040805180820190915260008152606060208201526000805b83518110156107b657600084828151811061058257610582611a77565b6020026020010151602001518583815181106105a0576105a0611a77565b6020026020010151604001516105b69190611aa3565b63ffffffff1611610659578381815181106105d3576105d3611a77565b6020026020010151600001518482815181106105f1576105f1611a77565b60200260200101516020015185838151811061060f5761060f611a77565b602002602001015160400151604051630fb55db160e41b8152600401610477939291906001600160a01b0393909316835263ffffffff918216602084015216604082015260600190565b600084828151811061066d5761066d611a77565b6020026020010151600001516001600160a01b03163b90508063ffffffff1685838151811061069e5761069e611a77565b60200260200101516040015163ffffffff161115610755578482815181106106c8576106c8611a77565b602002602001015160000151818684815181106106e7576106e7611a77565b60200260200101516020015187858151811061070557610705611a77565b602090810291909101015160409081015190516386d14d8960e01b81526001600160a01b03909416600485015263ffffffff92831660248501529082166044840152166064820152608401610477565b84828151811061076757610767611a77565b60200260200101516020015185838151811061078557610785611a77565b60200260200101516040015161079b9190611aa3565b6107ab9063ffffffff1684611ac7565b925050600101610565565b506040805180820190915290815260208101929092525090565b60006107ef604051806040016040528060008152602001606081525090565b83516000036108115760405163d74d341f60e01b815260040160405180910390fd5b60006001600160a01b031660008660405161082c9190611944565b908152604051908190036020019020546001600160a01b03161461086557846040516301856ec560e51b815260040161047791906115b0565b6108ae7f00000000000000000000000000000000000000000000000000000000000000008560405160200161089a919061187e565b604051602081830303815290604052610f7c565b9150816000866040516108c19190611944565b90815260405190819003602001812080546001600160a01b039384166001600160a01b0319909116179055908316906108fb908790611944565b60405180910390207f656833a15067acdf08730a6a38b6ab9ed5e3265936848d56eac08e7b3b7239648787600001518760405161093a93929190611ada565b60405180910390a3509391925050565b6020808201518051604051926386d14d8960e01b9190600080808080805b878110156109cd57602081026020018a01519550855194506020860151935060408601519250843b9150818311156109b457886000528460045281602452836044528260645260846000fd5b83830384888d01873c8383039690960195600101610968565b505050505050602081038552601f19601f820116850160405250505050919050565b60408051808201909152600081526060602082015260008083516001600160401b03811115610a2057610a206111fc565b604051908082528060200260200182016040528015610a6b57816020015b6040805160608101825260008082526020808301829052928201528252600019909201910181610a3e5790505b50905060005b8451811015610c1957610a9c858281518110610a8f57610a8f611a77565b6020026020010151611094565b610ae357848181518110610ab257610ab2611a77565b60200260200101516040516326cd283760e01b815260040161047791906001600160a01b0391909116815260200190565b848181518110610af557610af5611a77565b6020026020010151828281518110610b0f57610b0f611a77565b6020026020010151600001906001600160a01b031690816001600160a01b0316815250506001828281518110610b4757610b47611a77565b60200260200101516020019063ffffffff16908163ffffffff1681525050848181518110610b7757610b77611a77565b60200260200101516001600160a01b03163b828281518110610b9b57610b9b611a77565b60200260200101516040019063ffffffff16908163ffffffff1681525050818181518110610bcb57610bcb611a77565b602002602001015160200151828281518110610be957610be9611a77565b602002602001015160400151610bff9190611aa3565b610c0f9063ffffffff1684611ac7565b9250600101610a71565b5060408051808201909152918252602082015292915050565b6040805180820190915260008152606060208201528151615fff6000816001610c5b8286611ac7565b610c659190611b05565b610c6f9190611b18565b90506000816001600160401b03811115610c8b57610c8b6111fc565b604051908082528060200260200182016040528015610cbe57816020015b6060815260200190600190039081610ca95790505b50905060005b82811015610d31576000610cd88583611b3a565b9050600086610ce78784611ac7565b11610cfb57610cf68683611ac7565b610cfd565b865b9050610d0a8983836110bd565b848481518110610d1c57610d1c611a77565b60209081029190910101525050600101610cc4565b50610d3b81610d45565b9695505050505050565b60408051808201909152600081526060602082015260008083516001600160401b03811115610d7657610d766111fc565b604051908082528060200260200182016040528015610dc157816020015b6040805160608101825260008082526020808301829052928201528252600019909201910181610d945790505b50905060005b8451811015610c1957610e137f0000000000000000000000000000000000000000000000000000000000000000868381518110610e0657610e06611a77565b6020026020010151610f7c565b828281518110610e2557610e25611a77565b6020026020010151600001906001600160a01b031690816001600160a01b0316815250506001828281518110610e5d57610e5d611a77565b60200260200101516020019063ffffffff16908163ffffffff1681525050848181518110610e8d57610e8d611a77565b6020026020010151516001610ea29190611ac7565b828281518110610eb457610eb4611a77565b60200260200101516040019063ffffffff16908163ffffffff1681525050818181518110610ee457610ee4611a77565b602002602001015160200151828281518110610f0257610f02611a77565b602002602001015160400151610f189190611aa3565b610f289063ffffffff1684611ac7565b9250600101610dc7565b6060813b80610f49576311052bb46000526004601cfd5b600181039050604051915061ffe0603f820116820160405280825260008160208401015280600160208401853c50919050565b600080610f898484611123565b90506001600160a01b0381163b15610fa25790506102d8565b600080856001600160a01b031664457468465360d81b610fc187611138565b604051602001610fd2929190611b51565b60408051601f1981840301815290829052610fec91611944565b6000604051808303816000865af19150503d8060008114611029576040519150601f19603f3d011682016040523d82523d6000602084013e61102e565b606091505b509150915081611041576110418161118d565b61104a81611b77565b60601c93506001600160a01b038316841461108b57604051636509115d60e01b81526001600160a01b03808516600483015285166024820152604401610477565b50505092915050565b6000813b60fe81156110b5576040516001600082873c601e19015160ff1690505b159392505050565b606083518281116110cc578092505b8381116110d7578093505b508183101561049c575060405182820380825293830193601f19601f820181165b86810151848201528101806110f85750600083830160200152603f9091011681016040529392505050565b600061049c8264457468465360d81b85611195565b6060815160016111489190611ac7565b60e81b6001600160e81b0319166a61000080600a3d393df30060a81b1782604051602001611177929190611bb3565b6040516020818303038152906040529050919050565b805160208201fd5b6000806111a1856111cb565b905060ff600053806035528260601b60015283601552605560002091506000603552509392505050565b60008151600181018060101c3d3d3e6a61000080600a3d393df300604082901b178452600a01601584012092525090565b634e487b7160e01b600052604160045260246000fd5b604051606081016001600160401b0381118282101715611234576112346111fc565b60405290565b604080519081016001600160401b0381118282101715611234576112346111fc565b604051601f8201601f191681016001600160401b0381118282101715611284576112846111fc565b604052919050565b600082601f83011261129d57600080fd5b81356001600160401b038111156112b6576112b66111fc565b6112c9601f8201601f191660200161125c565b8181528460208386010111156112de57600080fd5b816020850160208301376000918101602001919091529392505050565b60006001600160401b03821115611314576113146111fc565b5060051b60200190565b6001600160a01b038116811461133357600080fd5b50565b63ffffffff8116811461133357600080fd5b600082601f83011261135957600080fd5b8135602061136e611369836112fb565b61125c565b8281526060928302850182019282820191908785111561138d57600080fd5b8387015b858110156113ef5781818a0312156113a95760008081fd5b6113b1611212565b81356113bc8161131e565b8152818601356113cb81611336565b818701526040828101356113de81611336565b908201528452928401928101611391565b5090979650505050505050565b60008060006060848603121561141157600080fd5b83356001600160401b038082111561142857600080fd5b6114348783880161128c565b9450602086013591508082111561144a57600080fd5b61145687838801611348565b9350604086013591508082111561146c57600080fd5b506114798682870161128c565b9150509250925092565b600060408084018351855260208085015160408288015282815180855260609450606089019150838301925060005b818110156114f257835180516001600160a01b031684528581015163ffffffff9081168786015290880151168784015292840192918501916001016114b2565b509098975050505050505050565b6001600160a01b038316815260406020820181905260009061152490830184611483565b949350505050565b60006020828403121561153e57600080fd5b81356001600160401b0381111561155457600080fd5b6115248482850161128c565b60005b8381101561157b578181015183820152602001611563565b50506000910152565b6000815180845261159c816020860160208601611560565b601f01601f19169290920160200192915050565b60208152600061049c6020830184611584565b600082601f8301126115d457600080fd5b813560206115e4611369836112fb565b8083825260208201915060208460051b87010193508684111561160657600080fd5b602086015b8481101561162b57803561161e8161131e565b835291830191830161160b565b509695505050505050565b60008060006060848603121561164b57600080fd5b83356001600160401b038082111561166257600080fd5b61166e8783880161128c565b9450602086013591508082111561168457600080fd5b611456878388016115c3565b600080604083850312156116a357600080fd5b82356001600160401b03808211156116ba57600080fd5b6116c68683870161128c565b935060208501359150808211156116dc57600080fd5b506116e98582860161128c565b9150509250929050565b600082601f83011261170457600080fd5b81356020611714611369836112fb565b82815260059290921b8401810191818101908684111561173357600080fd5b8286015b8481101561162b5780356001600160401b038111156117565760008081fd5b6117648986838b010161128c565b845250918301918301611737565b60008060006060848603121561178757600080fd5b83356001600160401b038082111561179e57600080fd5b6117aa8783880161128c565b945060208601359150808211156117c057600080fd5b611456878388016116f3565b600080604083850312156117df57600080fd5b82356001600160401b03808211156117f657600080fd5b6118028683870161128c565b9350602085013591508082111561181857600080fd5b506116e985828601611348565b6000806040838503121561183857600080fd5b82356001600160401b038082111561184f57600080fd5b61185b8683870161128c565b9350602085013591508082111561187157600080fd5b506116e9858286016116f3565b60208152600061049c6020830184611483565b600080604083850312156118a457600080fd5b82356001600160401b03808211156118bb57600080fd5b6118c78683870161128c565b935060208501359150808211156118dd57600080fd5b506116e9858286016115c3565b6000806000606084860312156118ff57600080fd5b83356001600160401b038082111561191657600080fd5b6119228783880161128c565b9450602086013591508082111561193857600080fd5b6114568783880161128c565b60008251611956818460208701611560565b9190910192915050565b6000602080838503121561197357600080fd5b82516001600160401b038082111561198a57600080fd5b818501915060408083880312156119a057600080fd5b6119a861123a565b8351815284840151838111156119bd57600080fd5b80850194505087601f8501126119d257600080fd5b835192506119e2611369846112fb565b8381526060938402850186019386820191908a861115611a0157600080fd5b958701955b85871015611a645780878c031215611a1e5760008081fd5b611a26611212565b8751611a318161131e565b815287890151611a4081611336565b818a015287860151611a5181611336565b8187015283529586019591870191611a06565b5095820195909552979650505050505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b63ffffffff828116828216039080821115611ac057611ac0611a8d565b5092915050565b808201808211156102d8576102d8611a8d565b606081526000611aed6060830186611584565b8460208401528281036040840152610d3b8185611584565b818103818111156102d8576102d8611a8d565b600082611b3557634e487b7160e01b600052601260045260246000fd5b500490565b80820281158282048414176102d8576102d8611a8d565b82815260008251611b69816020850160208701611560565b919091016020019392505050565b805160208201516bffffffffffffffffffffffff198082169291906014831015611bab5780818460140360031b1b83161693505b505050919050565b6001600160a81b0319831681528151600090611bd681600b850160208701611560565b91909101600b01939250505056fea164736f6c6343000818000a","sourceMap":"533:12304:39:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8204:269;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;12686:149;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;6943:271::-;;;;;;:::i;:::-;;:::i;2828:229::-;;;;;;:::i;:::-;;:::i;5681:262::-;;;;;;:::i;:::-;;:::i;1252:124::-;;;;;;:::i;:::-;;:::i;:::-;;;10402:14:47;;10395:22;10377:41;;10365:2;10350:18;1252:124:39;10237:187:47;7542:242:39;;;;;;:::i;:::-;;:::i;4668:235::-;;;;;;:::i;:::-;;:::i;650:33::-;;;;;;;;-1:-1:-1;;;;;11795:32:47;;;11777:51;;11765:2;11750:18;650:33:39;11631:203:47;1987:292:39;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;6275:244::-;;;;;;:::i;:::-;;:::i;808:56::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;808:56:39;;;3726:256;;;;;;:::i;:::-;;:::i;1563:252::-;;;;;;:::i;:::-;;:::i;8204:269::-;8358:15;8375:16;-1:-1:-1;;;;;;;;;;;;;;;;;;;8375:16:39;8410:56;8422:8;8432:23;8448:6;8432:15;:23::i;:::-;8457:8;8410:11;:56::i;:::-;8403:63;;;;8204:269;;;;;;:::o;12686:149::-;12763:22;12804:24;:17;12812:8;12804:7;:17::i;:::-;:22;:24::i;:::-;12797:31;12686:149;-1:-1:-1;;12686:149:39:o;6943:271::-;7095:15;7112:16;-1:-1:-1;;;;;;;;;;;;;;;;;;;7112:16:39;7147:60;7159:8;7169:27;7187:8;7169:17;:27::i;2828:229::-;2934:15;2951:16;-1:-1:-1;;;;;;;;;;;;;;;;;;;2951:16:39;2986:64;2998:8;3008:27;3026:8;3008:17;:27::i;:::-;3037:12;;;3047:1;3037:12;;;;;;;;2986:11;:64::i;:::-;2979:71;;;;2828:229;;;;;:::o;5681:262::-;5828:15;5845:16;-1:-1:-1;;;;;;;;;;;;;;;;;;;5845:16:39;5880:56;5892:8;5902:23;5918:6;5902:15;:23::i;1252:124::-;1317:4;1367:1;-1:-1:-1;;;;;1340:29:39;:5;1346:8;1340:15;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;;;;1340:15:39;:29;;;1252:124;-1:-1:-1;;1252:124:39:o;7542:242::-;7665:15;7682:16;-1:-1:-1;;;;;;;;;;;;;;;;;;;7682:16:39;7717:60;7729:8;7739:23;7755:6;7739:15;:23::i;4668:235::-;4784:15;4801:16;-1:-1:-1;;;;;;;;;;;;;;;;;;;4801:16:39;4836:60;4848:8;4858:23;4874:6;4858:15;:23::i;1987:292::-;-1:-1:-1;;;;;;;;;;;;;;;;;2091:15:39;2109:5;2115:8;2109:15;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;;;;2109:15:39;;-1:-1:-1;2109:15:39;2134:81;;2195:8;2182:22;;-1:-1:-1;;;2182:22:39;;;;;;;;:::i;:::-;;;;;;;;2134:81;2242:21;2255:7;2242:12;:21::i;:::-;2231:41;;;;;;;;;;;;:::i;:::-;2224:48;1987:292;-1:-1:-1;;;1987:292:39:o;6275:244::-;6396:15;6413:16;-1:-1:-1;;;;;;;;;;;;;;;;;;;6413:16:39;6448:64;6460:8;6470:27;6488:8;6470:17;:27::i;3726:256::-;3863:15;3880:16;-1:-1:-1;;;;;;;;;;;;;;;;;;;3880:16:39;3915:60;3927:8;3937:27;3955:8;3937:17;:27::i;1563:252::-;1642:15;1679:5;1685:8;1679:15;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;;;;1679:15:39;;-1:-1:-1;1679:15:39;1704:81;;1765:8;1752:22;;-1:-1:-1;;;1752:22:39;;;;;;;;:::i;1704:81::-;1563:252;;;:::o;10724:873::-;-1:-1:-1;;;;;;;;;;;;;;;;;10845:12:39;10876:9;10871:669;10895:6;:13;10891:1;:17;10871:669;;;10968:1;10949:6;10956:1;10949:9;;;;;;;;:::i;:::-;;;;;;;:15;;;10933:6;10940:1;10933:9;;;;;;;;:::i;:::-;;;;;;;:13;;;:31;;;;:::i;:::-;:36;;;10929:221;;11028:6;11035:1;11028:9;;;;;;;;:::i;:::-;;;;;;;:17;;;11067:6;11074:1;11067:9;;;;;;;;:::i;:::-;;;;;;;:15;;;11104:6;11111:1;11104:9;;;;;;;;:::i;:::-;;;;;;;:13;;;10996:139;;-1:-1:-1;;;10996:139:39;;;;;;;;;-1:-1:-1;;;;;16205:32:47;;;;16187:51;;16257:10;16303:15;;;16298:2;16283:18;;16276:43;16355:15;16350:2;16335:18;;16328:43;16175:2;16160:18;;15989:388;10929:221:39;11163:15;11188:6;11195:1;11188:9;;;;;;;;:::i;:::-;;;;;;;:17;;;-1:-1:-1;;;;;11188:29:39;;11163:55;;11252:8;11236:24;;:6;11243:1;11236:9;;;;;;;;:::i;:::-;;;;;;;:13;;;:24;;;11232:245;;;11325:6;11332:1;11325:9;;;;;;;;:::i;:::-;;;;;;;:17;;;11364:8;11394:6;11401:1;11394:9;;;;;;;;:::i;:::-;;;;;;;:15;;;11431:6;11438:1;11431:9;;;;;;;;:::i;:::-;;;;;;;;;;;:13;;;;;11287:175;;-1:-1:-1;;;11287:175:39;;-1:-1:-1;;;;;16625:32:47;;;11287:175:39;;;16607:51:47;16677:10;16723:15;;;16703:18;;;16696:43;16775:15;;;16755:18;;;16748:43;16827:15;16807:18;;;16800:43;16579:19;;11287:175:39;16382:467:47;11232:245:39;11514:6;11521:1;11514:9;;;;;;;;:::i;:::-;;;;;;;:15;;;11498:6;11505:1;11498:9;;;;;;;;:::i;:::-;;;;;;;:13;;;:31;;;;:::i;:::-;11490:39;;;;;;:::i;:::-;;-1:-1:-1;;10910:3:39;;10871:669;;;-1:-1:-1;11556:34:39;;;;;;;;;;;;;;;;;;;-1:-1:-1;11556:34:39;10724:873::o;11669:544::-;11803:15;11820:11;-1:-1:-1;;;;;;;;;;;;;;;;;;;11820:11:39;11847:9;;;:14;11843:63;;11884:11;;-1:-1:-1;;;11884:11:39;;;;;;;;;;;11843:63;11946:1;-1:-1:-1;;;;;11919:29:39;:5;11925:8;11919:15;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;;;;11919:15:39;:29;11915:91;;11986:8;11971:24;;-1:-1:-1;;;11971:24:39;;;;;;;;:::i;11915:91::-;12025:38;12036:8;12057:4;12046:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;12025:10;:38::i;:::-;12015:48;;12091:7;12073:5;12079:8;12073:15;;;;;;:::i;:::-;;;;;;;;;;;;;;:25;;-1:-1:-1;;;;;12073:25:39;;;-1:-1:-1;;;;;;12073:25:39;;;;;;12113:61;;;;;;12125:8;;12113:61;:::i;:::-;;;;;;;;;12144:8;12154:4;:9;;;12165:8;12113:61;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;11669:544:39;12201:4;;-1:-1:-1;;11669:544:39:o;1381:1319:37:-;1489:11;;;;;1602:13;;1667:4;1661:11;;-1:-1:-1;;;1540:25:37;1602:13;1457:29;;;;;;1775:747;1820:3;1817:1;1814:10;1775:747;;;1922:4;1919:1;1915:12;1909:4;1905:23;1897:6;1893:36;1887:43;1878:52;;1960:5;1954:12;1943:23;;2005:4;1998:5;1994:16;1988:23;1979:32;;2048:4;2041:5;2037:16;2031:23;2024:30;;2092:7;2080:20;2068:32;;2124:8;2119:3;2116:17;2113:273;;;2165:24;2159:4;2152:38;2220:7;2214:4;2207:21;2258:8;2252:4;2245:22;2297:5;2291:4;2284:19;2333:3;2327:4;2320:17;2367:4;2361;2354:18;2113:273;2458:5;2453:3;2449:15;2442:5;2435:4;2425:8;2421:19;2412:7;2400:65;2496:15;;;2486:26;;;;;1851:1;1844:9;1775:747;;;1779:34;;;;;;2591:4;2585;2581:15;2571:8;2564:33;2684:4;2680:9;2673:4;2667;2663:15;2659:31;2649:8;2645:46;2639:4;2632:60;;;1581:1117;;1381:1319;;;:::o;9966:669:39:-;-1:-1:-1;;;;;;;;;;;;;;;;;10085:12:39;10111:29;10163:8;:15;-1:-1:-1;;;;;10143:36:39;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;10143:36:39;;-1:-1:-1;;10143:36:39;;;;;;;;;;;;10111:68;;10194:9;10189:389;10213:8;:15;10209:1;:19;10189:389;;;10254:27;10269:8;10278:1;10269:11;;;;;;;;:::i;:::-;;;;;;;10254:14;:27::i;:::-;10249:101;;10323:8;10332:1;10323:11;;;;;;;;:::i;:::-;;;;;;;10308:27;;-1:-1:-1;;;10308:27:39;;;;;;;-1:-1:-1;;;;;11795:32:47;;;;11777:51;;11765:2;11750:18;;11631:203;10249:101:39;10383:8;10392:1;10383:11;;;;;;;;:::i;:::-;;;;;;;10363:6;10370:1;10363:9;;;;;;;;:::i;:::-;;;;;;;:17;;:31;-1:-1:-1;;;;;10363:31:39;;;-1:-1:-1;;;;;10363:31:39;;;;;975:1:33;10408:6:39;10415:1;10408:9;;;;;;;;:::i;:::-;;;;;;;:15;;:45;;;;;;;;;;;10490:8;10499:1;10490:11;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;10490:23:39;;10467:6;10474:1;10467:9;;;;;;;;:::i;:::-;;;;;;;:13;;:47;;;;;;;;;;;10552:6;10559:1;10552:9;;;;;;;;:::i;:::-;;;;;;;:15;;;10536:6;10543:1;10536:9;;;;;;;;:::i;:::-;;;;;;;:13;;;:31;;;;:::i;:::-;10528:39;;;;;;:::i;:::-;;-1:-1:-1;10230:3:39;;10189:389;;;-1:-1:-1;10594:34:39;;;;;;;;;;;;;;;;;9966:669;-1:-1:-1;;9966:669:39:o;8564:602::-;-1:-1:-1;;;;;;;;;;;;;;;;;8690:22:39;;8742:10;8675:12;8742:10;8802:1;8783:16;8742:10;8690:22;8783:16;:::i;:::-;:20;;;;:::i;:::-;8782:34;;;;:::i;:::-;8762:54;;8826:22;8864:9;-1:-1:-1;;;;;8851:23:39;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8826:48;;8889:9;8884:236;8908:9;8904:1;:13;8884:236;;;8938:13;8954;8958:9;8954:1;:13;:::i;:::-;8938:29;-1:-1:-1;8981:11:39;9015:4;8995:17;9003:9;8938:29;8995:17;:::i;:::-;:24;:51;;9029:17;9037:9;9029:5;:17;:::i;:::-;8995:51;;;9022:4;8995:51;8981:65;;9072:37;9088:8;9098:5;9105:3;9072:15;:37::i;:::-;9060:6;9067:1;9060:9;;;;;;;;:::i;:::-;;;;;;;;;;:49;-1:-1:-1;;8919:3:39;;8884:236;;;;9136:23;9152:6;9136:15;:23::i;:::-;9129:30;8564:602;-1:-1:-1;;;;;;8564:602:39:o;9255:620::-;-1:-1:-1;;;;;;;;;;;;;;;;;9364:12:39;9390:29;9442:6;:13;-1:-1:-1;;;;;9422:34:39;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;9422:34:39;;-1:-1:-1;;9422:34:39;;;;;;;;;;;;9390:66;;9471:9;9466:352;9490:6;:13;9486:1;:17;9466:352;;;9544:38;9555:8;9571:6;9578:1;9571:9;;;;;;;;:::i;:::-;;;;;;;9544:10;:38::i;:::-;9524:6;9531:1;9524:9;;;;;;;;:::i;:::-;;;;;;;:17;;:58;-1:-1:-1;;;;;9524:58:39;;;-1:-1:-1;;;;;9524:58:39;;;;;975:1:33;9596:6:39;9603:1;9596:9;;;;;;;;:::i;:::-;;;;;;;:15;;:45;;;;;;;;;;;9723:6;9730:1;9723:9;;;;;;;;:::i;:::-;;;;;;;9717:23;975:1:33;9695:45:39;;;;:::i;:::-;9655:6;9662:1;9655:9;;;;;;;;:::i;:::-;;;;;;;:13;;:99;;;;;;;;;;;9792:6;9799:1;9792:9;;;;;;;;:::i;:::-;;;;;;;:15;;;9776:6;9783:1;9776:9;;;;;;;;:::i;:::-;;;;;;;:13;;;:31;;;;:::i;:::-;9768:39;;;;;;:::i;:::-;;-1:-1:-1;9505:3:39;;9466:352;;8138:1143:33;8192:17;8322:7;8310:20;8353:15;8343:235;;8471:10;8465:4;8458:24;8559:4;8553;8546:18;8343:235;8688:11;8671:15;8667:33;8655:45;;9018:4;9012:11;9004:19;;9080:6;9073:4;9067;9063:15;9059:28;9053:4;9049:39;9043:4;9036:53;9115:4;9109;9102:18;9168:1;9161:4;9154;9148;9144:15;9140:26;9133:37;9260:4;9247:11;9240:4;9234;9230:15;9221:7;9209:56;;8138:1143;;;:::o;2309:555:42:-;2388:15;2411:23;2437:29;2448:8;2458:7;2437:10;:29::i;:::-;2411:55;-1:-1:-1;;;;;;2047:19:42;;;:23;2472:75;;2525:15;-1:-1:-1;2518:22:42;;2472:75;2554:12;2568:17;2589:8;-1:-1:-1;;;;;2589:13:42;-1:-1:-1;;;2635:26:42;2653:7;2635:17;:26::i;:::-;2612:50;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;2612:50:42;;;;;;;;;;2589:79;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2553:115;;;;2679:7;2674:35;;2688:21;2704:4;2688:15;:21::i;:::-;2742:13;2750:4;2742:13;:::i;:::-;2734:22;;;-1:-1:-1;;;;;;2767:26:42;;;;2763:99;;2812:43;;-1:-1:-1;;;2812:43:42;;-1:-1:-1;;;;;19235:15:47;;;2812:43:42;;;19217:34:47;19287:15;;19267:18;;;19260:43;19152:18;;2812:43:42;19005:304:47;2763:99:42;2405:459;;;2309:555;;;;:::o;3587:975::-;3642:12;3943:20;;4043:4;4129:11;;4126:331;;4223:4;4217:11;4319:1;4316;4310:4;4301:7;4289:32;-1:-1:-1;;4426:13:42;4420:20;4442:4;4416:31;;-1:-1:-1;4126:331:42;4535:19;;3587:975;-1:-1:-1;;;3587:975:42:o;30204:1307:32:-;30317:20;30446:7;30440:14;30495:3;30480:13;30477:22;30467:58;;30510:13;30503:20;;30467:58;30566:5;30551:13;30548:24;30538:62;;30585:13;30576:22;;30538:62;;30626:3;30619:5;30616:14;30613:882;;;-1:-1:-1;30665:4:32;30659:11;30707:15;;;30739:28;;;30795:19;;;;-1:-1:-1;;30844:4:32;30954:23;;30950:31;;30935:237;31040:15;;;31034:22;31018:14;;;31011:46;31083:9;;31132:22;30935:237;31132:22;-1:-1:-1;31288:1:32;31250:36;;;31266:4;31250:36;31243:47;31470:4;31452:23;;;31448:31;31436:44;;31430:4;31423:58;30204:1307;;;;;:::o;1606:177:42:-;1690:15;1720:60;1756:7;-1:-1:-1;;;1771:8:42;1720:35;:60::i;712:660::-;781:25;1317:7;:14;1334:1;1317:18;;;;:::i;:::-;1303:34;;-1:-1:-1;;;;;1295:43:42;;1153:24;1145:33;;:193;1352:7;1115:254;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1100:269;;712:660;;;:::o;3077:229::-;3290:6;3284:13;3277:4;3269:6;3265:17;3258:40;7105:652:33;7240:17;7273:12;7288:18;7301:4;7288:12;:18::i;:::-;7273:33;;7448:4;7442;7434:19;7500:4;7494;7487:18;7539:8;7535:2;7531:17;7525:4;7518:31;7575:4;7569;7562:18;7622:4;7616;7606:21;7593:34;;7739:1;7733:4;7726:15;7368:383;7105:652;;;;;:::o;6129:765::-;6193:12;6315:4;6309:11;6373;6353:18;6349:36;6609:8;6605:2;6601:17;6583:16;6565;6550:69;6649:24;6679:4;6675:19;;;6646:49;6633:63;;6759:3;6745:18;6738:4;6728:15;;6718:46;6846:32;;-1:-1:-1;6718:46:33;6129:765::o;14:127:47:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:253;218:2;212:9;260:4;248:17;;-1:-1:-1;;;;;280:34:47;;316:22;;;277:62;274:88;;;342:18;;:::i;:::-;378:2;371:22;146:253;:::o;404:257::-;476:4;470:11;;;508:17;;-1:-1:-1;;;;;540:34:47;;576:22;;;537:62;534:88;;;602:18;;:::i;666:275::-;737:2;731:9;802:2;783:13;;-1:-1:-1;;779:27:47;767:40;;-1:-1:-1;;;;;822:34:47;;858:22;;;819:62;816:88;;;884:18;;:::i;:::-;920:2;913:22;666:275;;-1:-1:-1;666:275:47:o;946:531::-;989:5;1042:3;1035:4;1027:6;1023:17;1019:27;1009:55;;1060:1;1057;1050:12;1009:55;1096:6;1083:20;-1:-1:-1;;;;;1118:2:47;1115:26;1112:52;;;1144:18;;:::i;:::-;1188:55;1231:2;1212:13;;-1:-1:-1;;1208:27:47;1237:4;1204:38;1188:55;:::i;:::-;1268:2;1259:7;1252:19;1314:3;1307:4;1302:2;1294:6;1290:15;1286:26;1283:35;1280:55;;;1331:1;1328;1321:12;1280:55;1396:2;1389:4;1381:6;1377:17;1370:4;1361:7;1357:18;1344:55;1444:1;1419:16;;;1437:4;1415:27;1408:38;;;;1423:7;946:531;-1:-1:-1;;;946:531:47:o;1482:196::-;1555:4;-1:-1:-1;;;;;1580:6:47;1577:30;1574:56;;;1610:18;;:::i;:::-;-1:-1:-1;1655:1:47;1651:14;1667:4;1647:25;;1482:196::o;1683:131::-;-1:-1:-1;;;;;1758:31:47;;1748:42;;1738:70;;1804:1;1801;1794:12;1738:70;1683:131;:::o;1819:121::-;1904:10;1897:5;1893:22;1886:5;1883:33;1873:61;;1930:1;1927;1920:12;1945:1312;2012:5;2065:3;2058:4;2050:6;2046:17;2042:27;2032:55;;2083:1;2080;2073:12;2032:55;2119:6;2106:20;2145:4;2169:73;2185:56;2238:2;2185:56;:::i;:::-;2169:73;:::i;:::-;2276:15;;;2338:4;2381:13;;;2369:26;;2365:35;;;2307:12;;;;2264:3;2412:15;;;2409:35;;;2440:1;2437;2430:12;2409:35;2476:2;2468:6;2464:15;2488:740;2504:6;2499:3;2496:15;2488:740;;;2580:2;2574:3;2569;2565:13;2561:22;2558:112;;;2624:1;2653:2;2649;2642:14;2558:112;2696:22;;:::i;:::-;2759:3;2746:17;2776:33;2801:7;2776:33;:::i;:::-;2822:22;;2885:12;;;2872:26;2911:32;2872:26;2911:32;:::i;:::-;2963:14;;;2956:31;3010:2;3053:12;;;3040:26;3079:32;3040:26;3079:32;:::i;:::-;3131:14;;;3124:31;3168:18;;3206:12;;;;2521;;2488:740;;;-1:-1:-1;3246:5:47;;1945:1312;-1:-1:-1;;;;;;;1945:1312:47:o;3262:813::-;3415:6;3423;3431;3484:2;3472:9;3463:7;3459:23;3455:32;3452:52;;;3500:1;3497;3490:12;3452:52;3540:9;3527:23;-1:-1:-1;;;;;3610:2:47;3602:6;3599:14;3596:34;;;3626:1;3623;3616:12;3596:34;3649:50;3691:7;3682:6;3671:9;3667:22;3649:50;:::i;:::-;3639:60;;3752:2;3741:9;3737:18;3724:32;3708:48;;3781:2;3771:8;3768:16;3765:36;;;3797:1;3794;3787:12;3765:36;3820:76;3888:7;3877:8;3866:9;3862:24;3820:76;:::i;:::-;3810:86;;3949:2;3938:9;3934:18;3921:32;3905:48;;3978:2;3968:8;3965:16;3962:36;;;3994:1;3991;3984:12;3962:36;;4017:52;4061:7;4050:8;4039:9;4035:24;4017:52;:::i;:::-;4007:62;;;3262:813;;;;;:::o;4080:946::-;4127:3;4155:4;4189;4184:3;4180:14;4221:5;4215:12;4210:3;4203:25;4247:4;4297:2;4290:5;4286:14;4280:21;4331:4;4326:2;4321:3;4317:12;4310:26;4358:4;4391:12;4385:19;4426:6;4420:4;4413:20;4452:2;4442:12;;4481:2;4476:3;4472:12;4463:21;;4525:2;4511:12;4507:21;4493:35;;4546:1;4556:443;4570:6;4567:1;4564:13;4556:443;;;4629:13;;4673:9;;-1:-1:-1;;;;;4669:35:47;4655:50;;4746:11;;;4740:18;4781:10;4827:23;;;4811:14;;;4804:47;4897:11;;;4891:18;4887:27;4871:14;;;4864:51;4974:15;;;;4937:14;;;;4701:1;4585:9;4556:443;;;-1:-1:-1;5015:5:47;;4080:946;-1:-1:-1;;;;;;;;4080:946:47:o;5031:348::-;-1:-1:-1;;;;;5234:32:47;;5216:51;;5303:2;5298;5283:18;;5276:30;;;-1:-1:-1;;5323:50:47;;5354:18;;5346:6;5323:50;:::i;:::-;5315:58;5031:348;-1:-1:-1;;;;5031:348:47:o;5384:322::-;5453:6;5506:2;5494:9;5485:7;5481:23;5477:32;5474:52;;;5522:1;5519;5512:12;5474:52;5562:9;5549:23;-1:-1:-1;;;;;5587:6:47;5584:30;5581:50;;;5627:1;5624;5617:12;5581:50;5650;5692:7;5683:6;5672:9;5668:22;5650:50;:::i;5711:250::-;5796:1;5806:113;5820:6;5817:1;5814:13;5806:113;;;5896:11;;;5890:18;5877:11;;;5870:39;5842:2;5835:10;5806:113;;;-1:-1:-1;;5953:1:47;5935:16;;5928:27;5711:250::o;5966:271::-;6008:3;6046:5;6040:12;6073:6;6068:3;6061:19;6089:76;6158:6;6151:4;6146:3;6142:14;6135:4;6128:5;6124:16;6089:76;:::i;:::-;6219:2;6198:15;-1:-1:-1;;6194:29:47;6185:39;;;;6226:4;6181:50;;5966:271;-1:-1:-1;;5966:271:47:o;6242:220::-;6391:2;6380:9;6373:21;6354:4;6411:45;6452:2;6441:9;6437:18;6429:6;6411:45;:::i;6467:756::-;6521:5;6574:3;6567:4;6559:6;6555:17;6551:27;6541:55;;6592:1;6589;6582:12;6541:55;6628:6;6615:20;6654:4;6678:73;6694:56;6747:2;6694:56;:::i;6678:73::-;6773:3;6797:2;6792:3;6785:15;6825:4;6820:3;6816:14;6809:21;;6882:4;6876:2;6873:1;6869:10;6861:6;6857:23;6853:34;6839:48;;6910:3;6902:6;6899:15;6896:35;;;6927:1;6924;6917:12;6896:35;6963:4;6955:6;6951:17;6977:217;6993:6;6988:3;6985:15;6977:217;;;7073:3;7060:17;7090:31;7115:5;7090:31;:::i;:::-;7134:18;;7172:12;;;;7010;;6977:217;;;-1:-1:-1;7212:5:47;6467:756;-1:-1:-1;;;;;;6467:756:47:o;7228:768::-;7349:6;7357;7365;7418:2;7406:9;7397:7;7393:23;7389:32;7386:52;;;7434:1;7431;7424:12;7386:52;7474:9;7461:23;-1:-1:-1;;;;;7544:2:47;7536:6;7533:14;7530:34;;;7560:1;7557;7550:12;7530:34;7583:50;7625:7;7616:6;7605:9;7601:22;7583:50;:::i;:::-;7573:60;;7686:2;7675:9;7671:18;7658:32;7642:48;;7715:2;7705:8;7702:16;7699:36;;;7731:1;7728;7721:12;7699:36;7754:63;7809:7;7798:8;7787:9;7783:24;7754:63;:::i;8001:543::-;8089:6;8097;8150:2;8138:9;8129:7;8125:23;8121:32;8118:52;;;8166:1;8163;8156:12;8118:52;8206:9;8193:23;-1:-1:-1;;;;;8276:2:47;8268:6;8265:14;8262:34;;;8292:1;8289;8282:12;8262:34;8315:50;8357:7;8348:6;8337:9;8333:22;8315:50;:::i;:::-;8305:60;;8418:2;8407:9;8403:18;8390:32;8374:48;;8447:2;8437:8;8434:16;8431:36;;;8463:1;8460;8453:12;8431:36;;8486:52;8530:7;8519:8;8508:9;8504:24;8486:52;:::i;:::-;8476:62;;;8001:543;;;;;:::o;8549:901::-;8602:5;8655:3;8648:4;8640:6;8636:17;8632:27;8622:55;;8673:1;8670;8663:12;8622:55;8709:6;8696:20;8735:4;8759:73;8775:56;8828:2;8775:56;:::i;8759:73::-;8866:15;;;8952:1;8948:10;;;;8936:23;;8932:32;;;8897:12;;;;8976:15;;;8973:35;;;9004:1;9001;8994:12;8973:35;9040:2;9032:6;9028:15;9052:369;9068:6;9063:3;9060:15;9052:369;;;9154:3;9141:17;-1:-1:-1;;;;;9177:11:47;9174:35;9171:125;;;9250:1;9279:2;9275;9268:14;9171:125;9321:57;9374:3;9369:2;9355:11;9347:6;9343:24;9339:33;9321:57;:::i;:::-;9309:70;;-1:-1:-1;9399:12:47;;;;9085;;9052:369;;9455:777;9586:6;9594;9602;9655:2;9643:9;9634:7;9630:23;9626:32;9623:52;;;9671:1;9668;9661:12;9623:52;9711:9;9698:23;-1:-1:-1;;;;;9781:2:47;9773:6;9770:14;9767:34;;;9797:1;9794;9787:12;9767:34;9820:50;9862:7;9853:6;9842:9;9838:22;9820:50;:::i;:::-;9810:60;;9923:2;9912:9;9908:18;9895:32;9879:48;;9952:2;9942:8;9939:16;9936:36;;;9968:1;9965;9958:12;9936:36;9991:62;10045:7;10034:8;10023:9;10019:24;9991:62;:::i;10429:614::-;10564:6;10572;10625:2;10613:9;10604:7;10600:23;10596:32;10593:52;;;10641:1;10638;10631:12;10593:52;10681:9;10668:23;-1:-1:-1;;;;;10751:2:47;10743:6;10740:14;10737:34;;;10767:1;10764;10757:12;10737:34;10790:50;10832:7;10823:6;10812:9;10808:22;10790:50;:::i;:::-;10780:60;;10893:2;10882:9;10878:18;10865:32;10849:48;;10922:2;10912:8;10909:16;10906:36;;;10938:1;10935;10928:12;10906:36;;10961:76;11029:7;11018:8;11007:9;11003:24;10961:76;:::i;11048:578::-;11161:6;11169;11222:2;11210:9;11201:7;11197:23;11193:32;11190:52;;;11238:1;11235;11228:12;11190:52;11278:9;11265:23;-1:-1:-1;;;;;11348:2:47;11340:6;11337:14;11334:34;;;11364:1;11361;11354:12;11334:34;11387:50;11429:7;11420:6;11409:9;11405:22;11387:50;:::i;:::-;11377:60;;11490:2;11479:9;11475:18;11462:32;11446:48;;11519:2;11509:8;11506:16;11503:36;;;11535:1;11532;11525:12;11503:36;;11558:62;11612:7;11601:8;11590:9;11586:24;11558:62;:::i;11839:251::-;12014:2;12003:9;11996:21;11977:4;12034:50;12080:2;12069:9;12065:18;12057:6;12034:50;:::i;12095:569::-;12198:6;12206;12259:2;12247:9;12238:7;12234:23;12230:32;12227:52;;;12275:1;12272;12265:12;12227:52;12315:9;12302:23;-1:-1:-1;;;;;12385:2:47;12377:6;12374:14;12371:34;;;12401:1;12398;12391:12;12371:34;12424:50;12466:7;12457:6;12446:9;12442:22;12424:50;:::i;:::-;12414:60;;12527:2;12516:9;12512:18;12499:32;12483:48;;12556:2;12546:8;12543:16;12540:36;;;12572:1;12569;12562:12;12540:36;;12595:63;12650:7;12639:8;12628:9;12624:24;12595:63;:::i;12669:742::-;12775:6;12783;12791;12844:2;12832:9;12823:7;12819:23;12815:32;12812:52;;;12860:1;12857;12850:12;12812:52;12900:9;12887:23;-1:-1:-1;;;;;12970:2:47;12962:6;12959:14;12956:34;;;12986:1;12983;12976:12;12956:34;13009:50;13051:7;13042:6;13031:9;13027:22;13009:50;:::i;:::-;12999:60;;13112:2;13101:9;13097:18;13084:32;13068:48;;13141:2;13131:8;13128:16;13125:36;;;13157:1;13154;13147:12;13125:36;13180:52;13224:7;13213:8;13202:9;13198:24;13180:52;:::i;13416:289::-;13547:3;13585:6;13579:13;13601:66;13660:6;13655:3;13648:4;13640:6;13636:17;13601:66;:::i;:::-;13683:16;;;;;13416:289;-1:-1:-1;;13416:289:47:o;13710:1830::-;13803:6;13834:2;13877;13865:9;13856:7;13852:23;13848:32;13845:52;;;13893:1;13890;13883:12;13845:52;13926:9;13920:16;-1:-1:-1;;;;;13996:2:47;13988:6;13985:14;13982:34;;;14012:1;14009;14002:12;13982:34;14050:6;14039:9;14035:22;14025:32;;14076:4;14114;14109:2;14100:7;14096:16;14092:27;14089:47;;;14132:1;14129;14122:12;14089:47;14158:22;;:::i;:::-;14209:2;14203:9;14196:5;14189:24;14252:2;14248;14244:11;14238:18;14281:2;14271:8;14268:16;14265:36;;;14297:1;14294;14287:12;14265:36;14328:8;14324:2;14320:17;14310:27;;;14375:7;14368:4;14364:2;14360:13;14356:27;14346:55;;14397:1;14394;14387:12;14346:55;14426:2;14420:9;14410:19;;14449:73;14465:56;14518:2;14465:56;:::i;14449:73::-;14556:15;;;14618:4;14657:13;;;14649:22;;14645:31;;;14587:12;;;;14544:3;14688:19;;;14685:39;;;14720:1;14717;14710:12;14685:39;14744:11;;;;14764:708;14780:6;14775:3;14772:15;14764:708;;;14860:2;14854:3;14845:7;14841:17;14837:26;14834:116;;;14904:1;14933:2;14929;14922:14;14834:116;14978:22;;:::i;:::-;15034:3;15028:10;15051:33;15076:7;15051:33;:::i;:::-;15097:24;;15155:12;;;15149:19;15181:32;15149:19;15181:32;:::i;:::-;15233:16;;;15226:33;15293:12;;;15287:19;15319:32;15287:19;15319:32;:::i;:::-;15371:16;;;15364:33;15410:20;;14797:12;;;;15450;;;;14764:708;;;-1:-1:-1;15488:14:47;;;15481:29;;;;15492:5;13710:1830;-1:-1:-1;;;;;;;13710:1830:47:o;15545:127::-;15606:10;15601:3;15597:20;15594:1;15587:31;15637:4;15634:1;15627:15;15661:4;15658:1;15651:15;15677:127;15738:10;15733:3;15729:20;15726:1;15719:31;15769:4;15766:1;15759:15;15793:4;15790:1;15783:15;15809:175;15877:10;15920;;;15908;;;15904:27;;15943:12;;;15940:38;;;15958:18;;:::i;:::-;15940:38;15809:175;;;;:::o;16854:125::-;16919:9;;;16940:10;;;16937:36;;;16953:18;;:::i;16984:452::-;17207:2;17196:9;17189:21;17170:4;17233:45;17274:2;17263:9;17259:18;17251:6;17233:45;:::i;:::-;17314:6;17309:2;17298:9;17294:18;17287:34;17369:9;17361:6;17357:22;17352:2;17341:9;17337:18;17330:50;17397:33;17423:6;17415;17397:33;:::i;17441:128::-;17508:9;;;17529:11;;;17526:37;;;17543:18;;:::i;17574:217::-;17614:1;17640;17630:132;;17684:10;17679:3;17675:20;17672:1;17665:31;17719:4;17716:1;17709:15;17747:4;17744:1;17737:15;17630:132;-1:-1:-1;17776:9:47;;17574:217::o;17796:168::-;17869:9;;;17900;;17917:15;;;17911:22;;17897:37;17887:71;;17938:18;;:::i;17969:359::-;18156:6;18151:3;18144:19;18126:3;18192:6;18186:13;18208:73;18274:6;18269:2;18264:3;18260:12;18255:2;18247:6;18243:15;18208:73;:::i;:::-;18301:16;;;;18319:2;18297:25;;17969:359;-1:-1:-1;;;17969:359:47:o;18625:375::-;18743:12;;18791:4;18780:16;;18774:23;-1:-1:-1;;18865:11:47;;;;18743:12;18774:23;18899:2;18888:14;;18885:109;;;18981:2;18975;18965:6;18961:2;18957:15;18954:1;18950:23;18946:32;18942:2;18938:41;18934:50;18925:59;;18885:109;;;;18625:375;;;:::o;19314:402::-;-1:-1:-1;;;;;;19501:47:47;;19489:60;;19572:13;;19471:3;;19594:75;19572:13;19657:2;19648:12;;19641:4;19629:17;;19594:75;:::i;:::-;19689:16;;;;19707:2;19685:25;;19314:402;-1:-1:-1;;;19314:402:47:o","linkReferences":{},"immutableReferences":{"48769":[{"start":448,"length":32},{"start":2154,"length":32},{"start":3541,"length":32}]}},"methodIdentifiers":{"createFile(string,string)":"81ad193a","createFile(string,string,bytes)":"e9c7b51c","createFileFromChunks(string,string[])":"d0e11f72","createFileFromChunks(string,string[],bytes)":"83e870d3","createFileFromPointers(string,address[])":"e24eaca4","createFileFromPointers(string,address[],bytes)":"7611cb02","createFileFromSlices(string,(address,uint32,uint32)[])":"9d3127df","createFileFromSlices(string,(address,uint32,uint32)[],bytes)":"55bb7d2c","deployer()":"d5f39488","fileExists(string)":"9bccd6ad","files(string)":"e7755761","getFile(string)":"e0876aa8","getPointer(string)":"fae172e6","readFile(string)":"60f9bb11"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_deployer\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FileEmpty\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"filename\",\"type\":\"string\"}],\"name\":\"FileNotFound\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"filename\",\"type\":\"string\"}],\"name\":\"FilenameExists\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pointer\",\"type\":\"address\"}],\"name\":\"InvalidPointer\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pointer\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"start\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"end\",\"type\":\"uint32\"}],\"name\":\"SliceEmpty\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pointer\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"codeSize\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"sliceStart\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"sliceEnd\",\"type\":\"uint32\"}],\"name\":\"SliceOutOfBounds\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"expectedPointer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"actualPointer\",\"type\":\"address\"}],\"name\":\"UnexpectedPointer\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Deployed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"indexedFilename\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pointer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"filename\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"size\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"metadata\",\"type\":\"bytes\"}],\"name\":\"FileCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"filename\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"contents\",\"type\":\"string\"}],\"name\":\"createFile\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pointer\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"size\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"pointer\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"start\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"end\",\"type\":\"uint32\"}],\"internalType\":\"struct BytecodeSlice[]\",\"name\":\"slices\",\"type\":\"tuple[]\"}],\"internalType\":\"struct File\",\"name\":\"file\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"filename\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"contents\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"metadata\",\"type\":\"bytes\"}],\"name\":\"createFile\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pointer\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"size\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"pointer\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"start\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"end\",\"type\":\"uint32\"}],\"internalType\":\"struct BytecodeSlice[]\",\"name\":\"slices\",\"type\":\"tuple[]\"}],\"internalType\":\"struct File\",\"name\":\"file\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"filename\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"chunks\",\"type\":\"string[]\"},{\"internalType\":\"bytes\",\"name\":\"metadata\",\"type\":\"bytes\"}],\"name\":\"createFileFromChunks\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pointer\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"size\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"pointer\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"start\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"end\",\"type\":\"uint32\"}],\"internalType\":\"struct BytecodeSlice[]\",\"name\":\"slices\",\"type\":\"tuple[]\"}],\"internalType\":\"struct File\",\"name\":\"file\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"filename\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"chunks\",\"type\":\"string[]\"}],\"name\":\"createFileFromChunks\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pointer\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"size\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"pointer\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"start\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"end\",\"type\":\"uint32\"}],\"internalType\":\"struct BytecodeSlice[]\",\"name\":\"slices\",\"type\":\"tuple[]\"}],\"internalType\":\"struct File\",\"name\":\"file\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"filename\",\"type\":\"string\"},{\"internalType\":\"address[]\",\"name\":\"pointers\",\"type\":\"address[]\"},{\"internalType\":\"bytes\",\"name\":\"metadata\",\"type\":\"bytes\"}],\"name\":\"createFileFromPointers\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pointer\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"size\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"pointer\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"start\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"end\",\"type\":\"uint32\"}],\"internalType\":\"struct BytecodeSlice[]\",\"name\":\"slices\",\"type\":\"tuple[]\"}],\"internalType\":\"struct File\",\"name\":\"file\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"filename\",\"type\":\"string\"},{\"internalType\":\"address[]\",\"name\":\"pointers\",\"type\":\"address[]\"}],\"name\":\"createFileFromPointers\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pointer\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"size\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"pointer\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"start\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"end\",\"type\":\"uint32\"}],\"internalType\":\"struct BytecodeSlice[]\",\"name\":\"slices\",\"type\":\"tuple[]\"}],\"internalType\":\"struct File\",\"name\":\"file\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"filename\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"pointer\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"start\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"end\",\"type\":\"uint32\"}],\"internalType\":\"struct BytecodeSlice[]\",\"name\":\"slices\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes\",\"name\":\"metadata\",\"type\":\"bytes\"}],\"name\":\"createFileFromSlices\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pointer\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"size\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"pointer\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"start\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"end\",\"type\":\"uint32\"}],\"internalType\":\"struct BytecodeSlice[]\",\"name\":\"slices\",\"type\":\"tuple[]\"}],\"internalType\":\"struct File\",\"name\":\"file\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"filename\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"pointer\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"start\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"end\",\"type\":\"uint32\"}],\"internalType\":\"struct BytecodeSlice[]\",\"name\":\"slices\",\"type\":\"tuple[]\"}],\"name\":\"createFileFromSlices\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pointer\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"size\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"pointer\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"start\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"end\",\"type\":\"uint32\"}],\"internalType\":\"struct BytecodeSlice[]\",\"name\":\"slices\",\"type\":\"tuple[]\"}],\"internalType\":\"struct File\",\"name\":\"file\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deployer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"filename\",\"type\":\"string\"}],\"name\":\"fileExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"filename\",\"type\":\"string\"}],\"name\":\"files\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pointer\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"filename\",\"type\":\"string\"}],\"name\":\"getFile\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"size\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"pointer\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"start\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"end\",\"type\":\"uint32\"}],\"internalType\":\"struct BytecodeSlice[]\",\"name\":\"slices\",\"type\":\"tuple[]\"}],\"internalType\":\"struct File\",\"name\":\"file\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"filename\",\"type\":\"string\"}],\"name\":\"getPointer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pointer\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"filename\",\"type\":\"string\"}],\"name\":\"readFile\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"contents\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"FileEmpty()\":[{\"details\":\"Error thrown when attempting to create an empty file\"}],\"FileNotFound(string)\":[{\"details\":\"Error thrown when a requested file is not found\",\"params\":{\"filename\":\"The name of the file requested\"}}],\"FilenameExists(string)\":[{\"details\":\"Error thrown when a filename already exists\",\"params\":{\"filename\":\"The name of the file attempted to be created\"}}],\"InvalidPointer(address)\":[{\"details\":\"Error thrown when the provided pointer's bytecode does not have the expected STOP opcode prefix from SSTORE2\",\"params\":{\"pointer\":\"The SSTORE2 pointer address\"}}],\"SliceEmpty(address,uint32,uint32)\":[{\"details\":\"Error thrown when a provided slice for a file is empty\",\"params\":{\"end\":\"The byte offset to end the slice (exclusive)\",\"pointer\":\"The contract address where the bytecode lives\",\"start\":\"The byte offset to start the slice (inclusive)\"}}],\"SliceOutOfBounds(address,uint32,uint32,uint32)\":[{\"details\":\"Error thrown when a slice is out of the bounds of the contract's bytecode\"}],\"UnexpectedPointer(address,address)\":[{\"details\":\"Error thrown when the pointer of the content added does not match the one we compute from the content, signaling something weird going on with the deployer\",\"params\":{\"actualPointer\":\"The actual address of the content\",\"expectedPointer\":\"The expected address of the content\"}}]},\"events\":{\"FileCreated(string,address,string,uint256,bytes)\":{\"details\":\"Emitted when a new file is created\",\"params\":{\"filename\":\"The name of the file\",\"indexedFilename\":\"The indexed filename for easier finding by filename in logs\",\"metadata\":\"Additional metadata of the file, only emitted for use in offchain indexers\",\"pointer\":\"The pointer address of the file\",\"size\":\"The total size of the file\"}}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_deployer\":\"The address of the deterministic CREATE2 deployer\"}},\"createFile(string,string)\":{\"details\":\"This is a convenience method to simplify small file uploads. It's recommended to use `createFileFromPointers` or `createFileFromSlices` for larger files. This particular method splits `contents` into 24575-byte chunks before storing them via SSTORE2.\",\"params\":{\"contents\":\"The contents of the file\",\"filename\":\"The name of the new file\"},\"returns\":{\"file\":\"The newly created file\",\"pointer\":\"The pointer address of the new file\"}},\"createFile(string,string,bytes)\":{\"details\":\"This is a convenience method to simplify small file uploads. It's recommended to use `createFileFromPointers` or `createFileFromSlices` for larger files. This particular method splits `contents` into 24575-byte chunks before storing them via SSTORE2.\",\"params\":{\"contents\":\"The contents of the file\",\"filename\":\"The name of the new file\",\"metadata\":\"Additional file metadata, usually a JSON-encoded string, for offchain indexers\"},\"returns\":{\"file\":\"The newly created file\",\"pointer\":\"The pointer address of the new file\"}},\"createFileFromChunks(string,string[])\":{\"details\":\"This is a convenience method to simplify small and nuanced file uploads. It's recommended to use `createFileFromPointers` or `createFileFromSlices` for larger files. This particular will store each chunk separately via SSTORE2. For best gas efficiency, each chunk should be as large as possible (up to the contract size limit) and at least 32 bytes.\",\"params\":{\"chunks\":\"The string chunks composing the file\",\"filename\":\"The name of the new file\"},\"returns\":{\"file\":\"The newly created file\",\"pointer\":\"The pointer address of the new file\"}},\"createFileFromChunks(string,string[],bytes)\":{\"details\":\"This is a convenience method to simplify small and nuanced file uploads. It's recommended to use `createFileFromPointers` or `createFileFromSlices` for larger files. This particular will store each chunk separately via SSTORE2. For best gas efficiency, each chunk should be as large as possible (up to the contract size limit) and at least 32 bytes.\",\"params\":{\"chunks\":\"The string chunks composing the file\",\"filename\":\"The name of the new file\",\"metadata\":\"Additional file metadata, usually a JSON-encoded string, for offchain indexers\"},\"returns\":{\"file\":\"The newly created file\",\"pointer\":\"The pointer address of the new file\"}},\"createFileFromPointers(string,address[])\":{\"params\":{\"filename\":\"The name of the new file\",\"pointers\":\"The SSTORE2 pointers composing the file\"},\"returns\":{\"file\":\"The newly created file\",\"pointer\":\"The pointer address of the new file\"}},\"createFileFromPointers(string,address[],bytes)\":{\"params\":{\"filename\":\"The name of the new file\",\"metadata\":\"Additional file metadata, usually a JSON-encoded string, for offchain indexers\",\"pointers\":\"The SSTORE2 pointers composing the file\"},\"returns\":{\"file\":\"The newly created file\",\"pointer\":\"The pointer address of the new file\"}},\"createFileFromSlices(string,(address,uint32,uint32)[])\":{\"params\":{\"filename\":\"The name of the new file\",\"slices\":\"The bytecode slices composing the file\"},\"returns\":{\"file\":\"The newly created file\",\"pointer\":\"The pointer address of the new file\"}},\"createFileFromSlices(string,(address,uint32,uint32)[],bytes)\":{\"params\":{\"filename\":\"The name of the new file\",\"metadata\":\"Additional file metadata, usually a JSON-encoded string, for offchain indexers\",\"slices\":\"The bytecode slices composing the file\"},\"returns\":{\"file\":\"The newly created file\",\"pointer\":\"The pointer address of the new file\"}},\"fileExists(string)\":{\"params\":{\"filename\":\"The name of the file to check\"},\"returns\":{\"_0\":\"True if the file exists, false otherwise\"}},\"getFile(string)\":{\"params\":{\"filename\":\"The name of the file\"},\"returns\":{\"file\":\"The file associated with the filename\"}},\"getPointer(string)\":{\"params\":{\"filename\":\"The name of the file\"},\"returns\":{\"pointer\":\"The pointer address of the file\"}},\"readFile(string)\":{\"details\":\"This method is intentionally left out of the `IFileStore` interface. Contracts should use `File.read()` directly, rather than this method. Otherwise you will incur unnecessary gas for passing around large byte blobs.\",\"params\":{\"filename\":\"The name of the file to read\"},\"returns\":{\"contents\":\"The contents of the file\"}}},\"stateVariables\":{\"deployer\":{\"details\":\"The address of the CREATE2 deterministic deployer\"},\"files\":{\"details\":\"Mapping of filenames to their respective SSTORE2 pointer where the ABI-encoded File lives\"}},\"title\":\"EthFS FileStore\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"createFile(string,string)\":{\"notice\":\"Creates a new file with the provided file contents\"},\"createFile(string,string,bytes)\":{\"notice\":\"Creates a new file with the provided file contents and file metadata\"},\"createFileFromChunks(string,string[])\":{\"notice\":\"Creates a new file where its content is composed of the provided string chunks\"},\"createFileFromChunks(string,string[],bytes)\":{\"notice\":\"Creates a new file with the provided string chunks and file metadata\"},\"createFileFromPointers(string,address[])\":{\"notice\":\"Creates a new file where its content is composed of the provided SSTORE2 pointers\"},\"createFileFromPointers(string,address[],bytes)\":{\"notice\":\"Creates a new file with the provided SSTORE2 pointers and file metadata\"},\"createFileFromSlices(string,(address,uint32,uint32)[])\":{\"notice\":\"Creates a new file where its content is composed of the provided bytecode slices\"},\"createFileFromSlices(string,(address,uint32,uint32)[],bytes)\":{\"notice\":\"Creates a new file with the provided bytecode slices and file metadata\"},\"fileExists(string)\":{\"notice\":\"Checks if a file exists for a given filename\"},\"getFile(string)\":{\"notice\":\"Retrieves a file by its filename\"},\"getPointer(string)\":{\"notice\":\"Retrieves the pointer address for a given filename\"},\"readFile(string)\":{\"notice\":\"Convenience method for reading files in frontends and indexers where libraries are not accessible.\"}},\"notice\":\"Content-addressable file storage for Ethereum. Files are composed of slices of contract bytecode, the most efficient way to store and retrieve data onchain.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/FileStore.sol\":\"FileStore\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@latticexyz/gas-report/=node_modules/@latticexyz/gas-report/src/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":solady/=lib/solady/src/\"]},\"sources\":{\"lib/solady/src/utils/LibString.sol\":{\"keccak256\":\"0x5fe22b86c56b1605d565ce9682757f09b589e4ede9c2bd5566d89d0ff29ec1f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://937f0f5b0a5ee99905958aecb90fc90afa3e6c6ce61044e4dc504ac6910c4564\",\"dweb:/ipfs/QmfACPaLrctW61BnqGgie2m93DdfjKgSosvrFxM5kq4pui\"]},\"lib/solady/src/utils/SSTORE2.sol\":{\"keccak256\":\"0xc6641e3dbc885d6a3032f5c92ebc703c3c7c821c8c3c645b26c9bea298736276\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c7751ad70faf3d0a0412d4ec80397ca56edb97ffd319dd4589fa38b2549f1c2e\",\"dweb:/ipfs/QmVJztYdnsxTwFT5WWYvbjyi38aUQUZisL5qZsYW2jqDHV\"]},\"src/File.sol\":{\"keccak256\":\"0x48d1e44dc183488c4111b9da9b02dca9e4cce52919c7acfb5244d0c8cfb1d583\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6fde0d5700fc1ff6dca7e904324d217627970762aa5e70ae4c1d0dc62d8cd6be\",\"dweb:/ipfs/QmPLmmwoG5btkQuVBDvKj6UDsCsCeb1r1UQtXDSvcY7ELz\"]},\"src/FileStore.sol\":{\"keccak256\":\"0xbd853b69e1e13dae0e70bedc1a0243501bff4874a1822a7bbefd98aff995de2f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bfaee8d56c143771dcfd37ab7f8d6048be20e9be413492d72f3bfe7c5980592d\",\"dweb:/ipfs/QmPyoHX7MRuu3LSRWsXA6j6wcjaUqevgdCczM6Aas8ANBw\"]},\"src/IFileStore.sol\":{\"keccak256\":\"0x4ed147df3f7b5c1aaeac79d819ff5a2742a6b773f416efa5c21964bb8d22b73d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab78352746cfb7ba313dac2f6665d2d7d6d4ec855634800c1c27e471124537e1\",\"dweb:/ipfs/QmXYJjNybkYgcL4sJYYMsE8pQ7wR4XwVvkSHAm5Lg8KFRU\"]},\"src/common.sol\":{\"keccak256\":\"0x20ad36adf087fc4e6124456f63a147f466621efb51fa771e0440e829a10fa68a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e6038ef1adb90823fec6bbd96c4d59bee39588278bc5ec59e50a912ad051ad10\",\"dweb:/ipfs/QmeQxCLppN3LhYBizRRdSsFQYHgz92fE8DZjThgK4k9YB2\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.24+commit.e11b9ed9"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"_deployer","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"type":"error","name":"FileEmpty"},{"inputs":[{"internalType":"string","name":"filename","type":"string"}],"type":"error","name":"FileNotFound"},{"inputs":[{"internalType":"string","name":"filename","type":"string"}],"type":"error","name":"FilenameExists"},{"inputs":[{"internalType":"address","name":"pointer","type":"address"}],"type":"error","name":"InvalidPointer"},{"inputs":[{"internalType":"address","name":"pointer","type":"address"},{"internalType":"uint32","name":"start","type":"uint32"},{"internalType":"uint32","name":"end","type":"uint32"}],"type":"error","name":"SliceEmpty"},{"inputs":[{"internalType":"address","name":"pointer","type":"address"},{"internalType":"uint32","name":"codeSize","type":"uint32"},{"internalType":"uint32","name":"sliceStart","type":"uint32"},{"internalType":"uint32","name":"sliceEnd","type":"uint32"}],"type":"error","name":"SliceOutOfBounds"},{"inputs":[{"internalType":"address","name":"expectedPointer","type":"address"},{"internalType":"address","name":"actualPointer","type":"address"}],"type":"error","name":"UnexpectedPointer"},{"inputs":[],"type":"event","name":"Deployed","anonymous":false},{"inputs":[{"internalType":"string","name":"indexedFilename","type":"string","indexed":true},{"internalType":"address","name":"pointer","type":"address","indexed":true},{"internalType":"string","name":"filename","type":"string","indexed":false},{"internalType":"uint256","name":"size","type":"uint256","indexed":false},{"internalType":"bytes","name":"metadata","type":"bytes","indexed":false}],"type":"event","name":"FileCreated","anonymous":false},{"inputs":[{"internalType":"string","name":"filename","type":"string"},{"internalType":"string","name":"contents","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"createFile","outputs":[{"internalType":"address","name":"pointer","type":"address"},{"internalType":"struct File","name":"file","type":"tuple","components":[{"internalType":"uint256","name":"size","type":"uint256"},{"internalType":"struct BytecodeSlice[]","name":"slices","type":"tuple[]","components":[{"internalType":"address","name":"pointer","type":"address"},{"internalType":"uint32","name":"start","type":"uint32"},{"internalType":"uint32","name":"end","type":"uint32"}]}]}]},{"inputs":[{"internalType":"string","name":"filename","type":"string"},{"internalType":"string","name":"contents","type":"string"},{"internalType":"bytes","name":"metadata","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"createFile","outputs":[{"internalType":"address","name":"pointer","type":"address"},{"internalType":"struct File","name":"file","type":"tuple","components":[{"internalType":"uint256","name":"size","type":"uint256"},{"internalType":"struct BytecodeSlice[]","name":"slices","type":"tuple[]","components":[{"internalType":"address","name":"pointer","type":"address"},{"internalType":"uint32","name":"start","type":"uint32"},{"internalType":"uint32","name":"end","type":"uint32"}]}]}]},{"inputs":[{"internalType":"string","name":"filename","type":"string"},{"internalType":"string[]","name":"chunks","type":"string[]"},{"internalType":"bytes","name":"metadata","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"createFileFromChunks","outputs":[{"internalType":"address","name":"pointer","type":"address"},{"internalType":"struct File","name":"file","type":"tuple","components":[{"internalType":"uint256","name":"size","type":"uint256"},{"internalType":"struct BytecodeSlice[]","name":"slices","type":"tuple[]","components":[{"internalType":"address","name":"pointer","type":"address"},{"internalType":"uint32","name":"start","type":"uint32"},{"internalType":"uint32","name":"end","type":"uint32"}]}]}]},{"inputs":[{"internalType":"string","name":"filename","type":"string"},{"internalType":"string[]","name":"chunks","type":"string[]"}],"stateMutability":"nonpayable","type":"function","name":"createFileFromChunks","outputs":[{"internalType":"address","name":"pointer","type":"address"},{"internalType":"struct File","name":"file","type":"tuple","components":[{"internalType":"uint256","name":"size","type":"uint256"},{"internalType":"struct BytecodeSlice[]","name":"slices","type":"tuple[]","components":[{"internalType":"address","name":"pointer","type":"address"},{"internalType":"uint32","name":"start","type":"uint32"},{"internalType":"uint32","name":"end","type":"uint32"}]}]}]},{"inputs":[{"internalType":"string","name":"filename","type":"string"},{"internalType":"address[]","name":"pointers","type":"address[]"},{"internalType":"bytes","name":"metadata","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"createFileFromPointers","outputs":[{"internalType":"address","name":"pointer","type":"address"},{"internalType":"struct File","name":"file","type":"tuple","components":[{"internalType":"uint256","name":"size","type":"uint256"},{"internalType":"struct BytecodeSlice[]","name":"slices","type":"tuple[]","components":[{"internalType":"address","name":"pointer","type":"address"},{"internalType":"uint32","name":"start","type":"uint32"},{"internalType":"uint32","name":"end","type":"uint32"}]}]}]},{"inputs":[{"internalType":"string","name":"filename","type":"string"},{"internalType":"address[]","name":"pointers","type":"address[]"}],"stateMutability":"nonpayable","type":"function","name":"createFileFromPointers","outputs":[{"internalType":"address","name":"pointer","type":"address"},{"internalType":"struct File","name":"file","type":"tuple","components":[{"internalType":"uint256","name":"size","type":"uint256"},{"internalType":"struct BytecodeSlice[]","name":"slices","type":"tuple[]","components":[{"internalType":"address","name":"pointer","type":"address"},{"internalType":"uint32","name":"start","type":"uint32"},{"internalType":"uint32","name":"end","type":"uint32"}]}]}]},{"inputs":[{"internalType":"string","name":"filename","type":"string"},{"internalType":"struct BytecodeSlice[]","name":"slices","type":"tuple[]","components":[{"internalType":"address","name":"pointer","type":"address"},{"internalType":"uint32","name":"start","type":"uint32"},{"internalType":"uint32","name":"end","type":"uint32"}]},{"internalType":"bytes","name":"metadata","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"createFileFromSlices","outputs":[{"internalType":"address","name":"pointer","type":"address"},{"internalType":"struct File","name":"file","type":"tuple","components":[{"internalType":"uint256","name":"size","type":"uint256"},{"internalType":"struct BytecodeSlice[]","name":"slices","type":"tuple[]","components":[{"internalType":"address","name":"pointer","type":"address"},{"internalType":"uint32","name":"start","type":"uint32"},{"internalType":"uint32","name":"end","type":"uint32"}]}]}]},{"inputs":[{"internalType":"string","name":"filename","type":"string"},{"internalType":"struct BytecodeSlice[]","name":"slices","type":"tuple[]","components":[{"internalType":"address","name":"pointer","type":"address"},{"internalType":"uint32","name":"start","type":"uint32"},{"internalType":"uint32","name":"end","type":"uint32"}]}],"stateMutability":"nonpayable","type":"function","name":"createFileFromSlices","outputs":[{"internalType":"address","name":"pointer","type":"address"},{"internalType":"struct File","name":"file","type":"tuple","components":[{"internalType":"uint256","name":"size","type":"uint256"},{"internalType":"struct BytecodeSlice[]","name":"slices","type":"tuple[]","components":[{"internalType":"address","name":"pointer","type":"address"},{"internalType":"uint32","name":"start","type":"uint32"},{"internalType":"uint32","name":"end","type":"uint32"}]}]}]},{"inputs":[],"stateMutability":"view","type":"function","name":"deployer","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"string","name":"filename","type":"string"}],"stateMutability":"view","type":"function","name":"fileExists","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"string","name":"filename","type":"string"}],"stateMutability":"view","type":"function","name":"files","outputs":[{"internalType":"address","name":"pointer","type":"address"}]},{"inputs":[{"internalType":"string","name":"filename","type":"string"}],"stateMutability":"view","type":"function","name":"getFile","outputs":[{"internalType":"struct File","name":"file","type":"tuple","components":[{"internalType":"uint256","name":"size","type":"uint256"},{"internalType":"struct BytecodeSlice[]","name":"slices","type":"tuple[]","components":[{"internalType":"address","name":"pointer","type":"address"},{"internalType":"uint32","name":"start","type":"uint32"},{"internalType":"uint32","name":"end","type":"uint32"}]}]}]},{"inputs":[{"internalType":"string","name":"filename","type":"string"}],"stateMutability":"view","type":"function","name":"getPointer","outputs":[{"internalType":"address","name":"pointer","type":"address"}]},{"inputs":[{"internalType":"string","name":"filename","type":"string"}],"stateMutability":"view","type":"function","name":"readFile","outputs":[{"internalType":"string","name":"contents","type":"string"}]}],"devdoc":{"kind":"dev","methods":{"constructor":{"params":{"_deployer":"The address of the deterministic CREATE2 deployer"}},"createFile(string,string)":{"details":"This is a convenience method to simplify small file uploads. It's recommended to use `createFileFromPointers` or `createFileFromSlices` for larger files. This particular method splits `contents` into 24575-byte chunks before storing them via SSTORE2.","params":{"contents":"The contents of the file","filename":"The name of the new file"},"returns":{"file":"The newly created file","pointer":"The pointer address of the new file"}},"createFile(string,string,bytes)":{"details":"This is a convenience method to simplify small file uploads. It's recommended to use `createFileFromPointers` or `createFileFromSlices` for larger files. This particular method splits `contents` into 24575-byte chunks before storing them via SSTORE2.","params":{"contents":"The contents of the file","filename":"The name of the new file","metadata":"Additional file metadata, usually a JSON-encoded string, for offchain indexers"},"returns":{"file":"The newly created file","pointer":"The pointer address of the new file"}},"createFileFromChunks(string,string[])":{"details":"This is a convenience method to simplify small and nuanced file uploads. It's recommended to use `createFileFromPointers` or `createFileFromSlices` for larger files. This particular will store each chunk separately via SSTORE2. For best gas efficiency, each chunk should be as large as possible (up to the contract size limit) and at least 32 bytes.","params":{"chunks":"The string chunks composing the file","filename":"The name of the new file"},"returns":{"file":"The newly created file","pointer":"The pointer address of the new file"}},"createFileFromChunks(string,string[],bytes)":{"details":"This is a convenience method to simplify small and nuanced file uploads. It's recommended to use `createFileFromPointers` or `createFileFromSlices` for larger files. This particular will store each chunk separately via SSTORE2. For best gas efficiency, each chunk should be as large as possible (up to the contract size limit) and at least 32 bytes.","params":{"chunks":"The string chunks composing the file","filename":"The name of the new file","metadata":"Additional file metadata, usually a JSON-encoded string, for offchain indexers"},"returns":{"file":"The newly created file","pointer":"The pointer address of the new file"}},"createFileFromPointers(string,address[])":{"params":{"filename":"The name of the new file","pointers":"The SSTORE2 pointers composing the file"},"returns":{"file":"The newly created file","pointer":"The pointer address of the new file"}},"createFileFromPointers(string,address[],bytes)":{"params":{"filename":"The name of the new file","metadata":"Additional file metadata, usually a JSON-encoded string, for offchain indexers","pointers":"The SSTORE2 pointers composing the file"},"returns":{"file":"The newly created file","pointer":"The pointer address of the new file"}},"createFileFromSlices(string,(address,uint32,uint32)[])":{"params":{"filename":"The name of the new file","slices":"The bytecode slices composing the file"},"returns":{"file":"The newly created file","pointer":"The pointer address of the new file"}},"createFileFromSlices(string,(address,uint32,uint32)[],bytes)":{"params":{"filename":"The name of the new file","metadata":"Additional file metadata, usually a JSON-encoded string, for offchain indexers","slices":"The bytecode slices composing the file"},"returns":{"file":"The newly created file","pointer":"The pointer address of the new file"}},"fileExists(string)":{"params":{"filename":"The name of the file to check"},"returns":{"_0":"True if the file exists, false otherwise"}},"getFile(string)":{"params":{"filename":"The name of the file"},"returns":{"file":"The file associated with the filename"}},"getPointer(string)":{"params":{"filename":"The name of the file"},"returns":{"pointer":"The pointer address of the file"}},"readFile(string)":{"details":"This method is intentionally left out of the `IFileStore` interface. Contracts should use `File.read()` directly, rather than this method. Otherwise you will incur unnecessary gas for passing around large byte blobs.","params":{"filename":"The name of the file to read"},"returns":{"contents":"The contents of the file"}}},"version":1},"userdoc":{"kind":"user","methods":{"createFile(string,string)":{"notice":"Creates a new file with the provided file contents"},"createFile(string,string,bytes)":{"notice":"Creates a new file with the provided file contents and file metadata"},"createFileFromChunks(string,string[])":{"notice":"Creates a new file where its content is composed of the provided string chunks"},"createFileFromChunks(string,string[],bytes)":{"notice":"Creates a new file with the provided string chunks and file metadata"},"createFileFromPointers(string,address[])":{"notice":"Creates a new file where its content is composed of the provided SSTORE2 pointers"},"createFileFromPointers(string,address[],bytes)":{"notice":"Creates a new file with the provided SSTORE2 pointers and file metadata"},"createFileFromSlices(string,(address,uint32,uint32)[])":{"notice":"Creates a new file where its content is composed of the provided bytecode slices"},"createFileFromSlices(string,(address,uint32,uint32)[],bytes)":{"notice":"Creates a new file with the provided bytecode slices and file metadata"},"fileExists(string)":{"notice":"Checks if a file exists for a given filename"},"getFile(string)":{"notice":"Retrieves a file by its filename"},"getPointer(string)":{"notice":"Retrieves the pointer address for a given filename"},"readFile(string)":{"notice":"Convenience method for reading files in frontends and indexers where libraries are not accessible."}},"version":1}},"settings":{"remappings":["@latticexyz/gas-report/=node_modules/@latticexyz/gas-report/src/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","ds-test/=lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","openzeppelin-contracts/=lib/openzeppelin-contracts/","openzeppelin/=lib/openzeppelin-contracts/contracts/","solady/=lib/solady/src/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"none"},"compilationTarget":{"src/FileStore.sol":"FileStore"},"evmVersion":"paris","libraries":{}},"sources":{"lib/solady/src/utils/LibString.sol":{"keccak256":"0x5fe22b86c56b1605d565ce9682757f09b589e4ede9c2bd5566d89d0ff29ec1f1","urls":["bzz-raw://937f0f5b0a5ee99905958aecb90fc90afa3e6c6ce61044e4dc504ac6910c4564","dweb:/ipfs/QmfACPaLrctW61BnqGgie2m93DdfjKgSosvrFxM5kq4pui"],"license":"MIT"},"lib/solady/src/utils/SSTORE2.sol":{"keccak256":"0xc6641e3dbc885d6a3032f5c92ebc703c3c7c821c8c3c645b26c9bea298736276","urls":["bzz-raw://c7751ad70faf3d0a0412d4ec80397ca56edb97ffd319dd4589fa38b2549f1c2e","dweb:/ipfs/QmVJztYdnsxTwFT5WWYvbjyi38aUQUZisL5qZsYW2jqDHV"],"license":"MIT"},"src/File.sol":{"keccak256":"0x48d1e44dc183488c4111b9da9b02dca9e4cce52919c7acfb5244d0c8cfb1d583","urls":["bzz-raw://6fde0d5700fc1ff6dca7e904324d217627970762aa5e70ae4c1d0dc62d8cd6be","dweb:/ipfs/QmPLmmwoG5btkQuVBDvKj6UDsCsCeb1r1UQtXDSvcY7ELz"],"license":"MIT"},"src/FileStore.sol":{"keccak256":"0xbd853b69e1e13dae0e70bedc1a0243501bff4874a1822a7bbefd98aff995de2f","urls":["bzz-raw://bfaee8d56c143771dcfd37ab7f8d6048be20e9be413492d72f3bfe7c5980592d","dweb:/ipfs/QmPyoHX7MRuu3LSRWsXA6j6wcjaUqevgdCczM6Aas8ANBw"],"license":"MIT"},"src/IFileStore.sol":{"keccak256":"0x4ed147df3f7b5c1aaeac79d819ff5a2742a6b773f416efa5c21964bb8d22b73d","urls":["bzz-raw://ab78352746cfb7ba313dac2f6665d2d7d6d4ec855634800c1c27e471124537e1","dweb:/ipfs/QmXYJjNybkYgcL4sJYYMsE8pQ7wR4XwVvkSHAm5Lg8KFRU"],"license":"MIT"},"src/common.sol":{"keccak256":"0x20ad36adf087fc4e6124456f63a147f466621efb51fa771e0440e829a10fa68a","urls":["bzz-raw://e6038ef1adb90823fec6bbd96c4d59bee39588278bc5ec59e50a912ad051ad10","dweb:/ipfs/QmeQxCLppN3LhYBizRRdSsFQYHgz92fE8DZjThgK4k9YB2"],"license":"MIT"}},"version":1},"id":39}